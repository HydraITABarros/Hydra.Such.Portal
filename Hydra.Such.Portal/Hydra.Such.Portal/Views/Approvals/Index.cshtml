
@{
    ViewData["Title"] = "Pedidos de Aprovação";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-approvals></x-approvals>
<dom-module id="x-approvals">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <style>
            :host([disabled]) {
                color: #a8a8a8;
                cursor: auto;
                pointer-events: none;
            }
        </style>

        @*POPULATE GRID*@
        <iron-ajax url="/Approvals/GetListApprovals"
                   last-response="{{result}}"
                   auto
                   method="post"
                   handle-as="json"
                   id="grid_databound"
                   content-type="application/json"></iron-ajax>

        @*Actions*@
        <iron-ajax url="/Approvals/UpdateMovementStatus"
                   last-response="{{actionResult}}"
                   method="post"
                   handle-as="json"
                   id="action_databound"
                   on-response="_actionResponseProcessor"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Approvals/ExportToExcel_Approvals"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <div class="subMenu">
            <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

            <!--start ColumnToggle-->
            <paper-menu-button class="column-toggle" no-animations>
                <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                <div class="list-group" slot="dropdown-content">
                    <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                        <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                            {{ item.value.label }}
                        </a>
                        <hr />
                    </template>
                </div>
            </paper-menu-button>
            <!--end ColumnToggle-->
        </div>

        <vaadin-grid aria-label="ApprovalsTable" id="grid" items="[[result]]" class="grid" multi-sort="true" column-reordering-allowed>
            @*<vaadin-grid-column width="140px">
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnEdit tableBtn" on-tap="_Approve" title="Aprovar"><i class="fa fa-check" aria-hidden="true"></i></paper-button>
                        <paper-button class="btnSave tableBtn" on-tap="_showDetails" title="Detalhes"><i class="fa fa-info" aria-hidden="true"></i></paper-button>
                        <paper-button class="btnRemove tableBtn" on-tap="_Reject" title="Rejeitar"><i class="fa fa-times" aria-hidden="true"></i></paper-button>
                    </center>
                </template>
            </vaadin-grid-column>*@

            <vaadin-grid-column width="50px">
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnEdit tableBtn" on-tap="_Approve" title="Aprovar"><i class="fa fa-check" aria-hidden="true"></i></paper-button>
                    </center>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="50px">
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnSave tableBtn" on-tap="_showDetails" title="Detalhes"><i class="fa fa-info" aria-hidden="true"></i></paper-button>
                    </center>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="50px">
                <template class="header">
                </template>
                <template>
                    <center>
                        <paper-button class="btnRemove tableBtn" on-tap="_Reject" title="Rejeitar"><i class="fa fa-times" aria-hidden="true"></i></paper-button>
                    </center>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="60px" resizable hidden>
                <template class="header">
                    <vaadin-grid-sorter path="movementNo">Nº</vaadin-grid-sorter>
                    <vaadin-grid-filter path="movementNo" value="[[filter.movementNo]]" />
                </template>
                <template>
                    {{item.movementNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.number.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="number">Código</vaadin-grid-sorter>
                    <vaadin-grid-filter path="number" value="[[filter.number]]" />
                </template>
                <template>
                    {{item.number}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="250px" resizable hidden$="{{ _columns.typeText.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="typeText">Tipo</vaadin-grid-sorter>
                    <vaadin-grid-filter path="typeText" value="[[filter.typeText]]" />
                </template>
                <template>
                    {{item.typeText}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.fhDatePartida.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="fhDatePartida">FH Dia da Partida</vaadin-grid-sorter>
                    <vaadin-grid-filter path="fhDatePartida" value="[[filter.fhDatePartida]]" />
                </template>
                <template>
                    {{item.fhDatePartida}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.fhDateChegada.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="fhDateChegada">FH Dia da Chegada</vaadin-grid-sorter>
                    <vaadin-grid-filter path="fhDateChegada" value="[[filter.fhDateChegada]]" />
                </template>
                <template>
                    {{item.fhDateChegada}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoProjectNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoProjectNo">Nº Ordem/Projeto</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoProjectNo" value="[[filter.requisicaoProjectNo]]" />
                </template>
                <template>
                    {{item.requisicaoProjectNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoClientNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoClientNo">Req Cliente Nº</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoClientNo" value="[[filter.requisicaoClientNo]]" />
                </template>
                <template>
                    {{item.requisicaoClientNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoClientName.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoClientName">Req Cliente Nome</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoClientName" value="[[filter.requisicaoClientName]]" />
                </template>
                <template>
                    {{item.requisicaoClientName}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoAcordosPrecos.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoAcordosPrecos">Req Acordos Preços</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoAcordosPrecos" value="[[filter.requisicaoAcordosPrecos]]" />
                </template>
                <template>
                    {{item.requisicaoAcordosPrecos}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoUrgente.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoUrgente">Req Urgente</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoUrgente" value="[[filter.requisicaoUrgente]]" />
                </template>
                <template>
                    {{item.requisicaoUrgente}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoOrcamentoEmAnexo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoOrcamentoEmAnexo">Req Anexo(s)</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoOrcamentoEmAnexo" value="[[filter.requisicaoOrcamentoEmAnexo]]" />
                </template>
                <template>
                    {{item.requisicaoOrcamentoEmAnexo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoImobilizado.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoImobilizado">Req Imobilizado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoImobilizado" value="[[filter.requisicaoImobilizado]]" />
                </template>
                <template>
                    {{item.requisicaoImobilizado}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoExclusivo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoExclusivo">Req Exclusivo</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoExclusivo" value="[[filter.requisicaoExclusivo]]" />
                </template>
                <template>
                    {{item.requisicaoExclusivo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoJaExecutado.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoJaExecutado">Req Já Executado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoJaExecutado" value="[[filter.requisicaoJaExecutado]]" />
                </template>
                <template>
                    {{item.requisicaoJaExecutado}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoAmostra.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoAmostra">Req Amostra</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoAmostra" value="[[filter.requisicaoAmostra]]" />
                </template>
                <template>
                    {{item.requisicaoAmostra}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoEquipamento.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoEquipamento">Req Equipamento</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoEquipamento" value="[[filter.requisicaoEquipamento]]" />
                </template>
                <template>
                    {{item.requisicaoEquipamento}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoReposicaoDeStock.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoReposicaoDeStock">Req Reposição De Stock</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoReposicaoDeStock" value="[[filter.requisicaoReposicaoDeStock]]" />
                </template>
                <template>
                    {{item.requisicaoReposicaoDeStock}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoPrecoIvaIncluido.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoPrecoIvaIncluido">Req Preço IVA Incluído</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoPrecoIvaIncluido" value="[[filter.requisicaoPrecoIvaIncluido]]" />
                </template>
                <template>
                    {{item.requisicaoPrecoIvaIncluido}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoAdiantamento.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoAdiantamento">Req Adiantamento</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoAdiantamento" value="[[filter.requisicaoAdiantamento]]" />
                </template>
                <template>
                    {{item.requisicaoAdiantamento}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoPedirOrcamento.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoPedirOrcamento">Req Pedir Orçamento</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoPedirOrcamento" value="[[filter.requisicaoPedirOrcamento]]" />
                </template>
                <template>
                    {{item.requisicaoPedirOrcamento}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.requisicaoRoupaManutencao.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisicaoRoupaManutencao">Req Roupa Manutenção</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisicaoRoupaManutencao" value="[[filter.requisicaoRoupaManutencao]]" />
                </template>
                <template>
                    {{item.requisicaoRoupaManutencao}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="200px" resizable hidden$="{{ _columns.requestUser.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requestUser">Solicitado Por</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requestUser" value="[[filter.requestUser]]" />
                </template>
                <template>
                    {{item.requestUser}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.value.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="value">Valor</vaadin-grid-sorter>
                    <vaadin-grid-filter path="value" value="[[filter.value]]" />
                </template>
                <template>
                    {{item.value}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="150px" resizable hidden$="{{ _columns.statusText.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="statusText">Estado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="statusText" value="[[filter.statusText]]" />
                </template>
                <template>
                    {{item.statusText}}
                </template>
            </vaadin-grid-column>
            <vaadin-grid-column width="100px" resizable hidden$="{{ _columns.level.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="level">Nivel</vaadin-grid-sorter>
                    <vaadin-grid-filter path="level" value="[[filter.level]]" />
                </template>
                <template>
                    {{item.level}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="100px" resizable hidden$="{{ _columns.region.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="region">Cód. Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="region" value="[[filter.region]]" />
                </template>
                <template>
                    {{item.region}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="100px" resizable hidden$="{{ _columns.responsabilityCenter.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="responsabilityCenter">Cód. Cresp</vaadin-grid-sorter>
                    <vaadin-grid-filter path="responsabilityCenter" value="[[filter.responsabilityCenter]]" />
                </template>
                <template>
                    {{item.responsabilityCenter}}
                </template>
            </vaadin-grid-column>
        </vaadin-grid>

        <paper-toast id="ToastMessage" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>

    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-approvals',
                properties: {
                    _columns: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                    /*FILTROS*/
                    filter: {
                        type: Object,
                        value: {},
                    },
                    disabled: {
                        type: Boolean,
                        notify: true,
                        value: false,
                        reflectToAttribute: true
                    },
                },
                /*FILTROS*/
                created: function () {
                    this.filter = window.getGridFilter('approvals-approvalslist');
                },
                ready: function () {
                    this.disabled = false;

                    /*FILTROS*/
                    window.handleGridListColumnsOrder(this.$.grid, 'approvals-approvalslist');
                    window.grid = this.$.grid;
                    window._this = this;

                    /*ColumnToggle*/
                    this._startColumnToggle();

                    var _this = this;
                    var gridToBottomTimeout;
                    $(window).resize(function () {
                        clearTimeout(gridToBottomTimeout);
                        gridToBottomTimeout = setTimeout(function () { _this.fixGridToBottom(); }, 200);
                    });
                    $(window).trigger('resize');
                },
                fixGridToBottom: function () {
                    var grid_el = $(this.$.grid);
                    var parentHeight = $(this).offsetParent().height();
                    var windowHeight = $(window).height();
                    var paddingTop = $(this).offsetParent().css('padding-top').replace("px", "");
                    var offsetTop = $(this).offset().top;
                    var height = windowHeight - offsetTop - paddingTop;
                    grid_el.height(height);
                },
                _openToast: function (message) {
                    this.$.ToastMessage.text = message;
                    this.$.ToastMessage.open();
                },
                _showDetails: function (e) {
                    if (e != null) {
                        /*FILTROS*/
                        var filters = {};
                        this.$.grid._filters.map(function (value, index) {
                            filters[value.path] = value.value;
                        });
                        window.setGridFilter('approvals-approvalslist', filters || {});

                        window.location.href = e.model.item.numberLink;
                    }
                },
                _Approve: function (e) {
                    if (e != null && this.disabled == false) {
                        this.disabled = true;

                        /*FILTROS*/
                        var filters = {};
                        this.$.grid._filters.map(function (value, index) {
                            filters[value.path] = value.value;
                        });
                        window.setGridFilter('approvals-approvalslist', filters || {});

                        this.$.action_databound.body = JSON.stringify({ movementNo: e.model.item.movementNo, status: 1, rejectReason: "" });
                        this.$.action_databound.generateRequest();
                    }
                },
                _Reject: function (e) {
                    if (e != null) {
                        /*FILTROS*/
                        var filters = {};
                        this.$.grid._filters.map(function (value, index) {
                            filters[value.path] = value.value;
                        });
                        window.setGridFilter('approvals-approvalslist', filters || {});

                        var TMessage = this.$.ToastMessage;
                        var TMessageError = this.$.ToastError;
                        var ARequest = this.$.action_databound;

                        if (e.model.item.type == 3 & (e.model.item.level == 2 | e.model.item.level == 3)) {
                            TMessageError.text = "Não é possível rejeitar a Folha de Horas neste nível.";
                            TMessageError.open();
                            return false;
                        };

                        bootbox.prompt({
                            title: "Introduza o motivo de rejeição!",
                            inputType: 'textarea',
                            buttons: {
                                confirm: {
                                    label: 'Rejeitar',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'Cancelar',
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) {
                                if (result != null) {
                                    if (result == "") {
                                        TMessageError.text = "É necessário preencher o motivo de rejeição.";
                                        TMessageError.open();
                                        return false;
                                    } else {
                                        ARequest.body = JSON.stringify({ movementNo: e.model.item.movementNo, status: 2, rejectReason: result });
                                        ARequest.generateRequest();
                                    }
                                }
                            }
                        });
                    }
                },
                _actionResponseProcessor: function (e) {
                    this.disabled = false;

                    if (this.actionResult.eReasonCode == 100) {
                        this.$.ToastMessage.text = this.actionResult.eMessage;
                        this.$.ToastMessage.open();

                        this.$.grid_databound.generateRequest();
                    } else {
                        this.$.ToastError.text = this.actionResult.eMessage;
                        this.$.ToastError.open();
                    }
                },

                _exportEXCEL: function () {
                    //debugger;
                    this.result[0].ColunasEXCEL = this._columns;

                    this.$.ajax_Export.body = JSON.stringify(this.result);
                    this.$.ajax_Export.generateRequest();
                },

                _exportEXCELResponse: function (e) {
                    //debugger
                    var FileName = this.export;
                    location.href = '../Approvals/ExportToExcelDownload_Approvals?sFileName=' + FileName;
                },

                /*start - ColumnToggle*/
                _startColumnToggle: function () {
                    var columns = {
                        "movementNo": { hidden: false, label: "Nº" },
                        "typeText": { hidden: false, label: "Tipo" },
                        "number": { hidden: false, label: "Associado" },
                        "fhDatePartida": { hidden: false, label: "FH Dia da Partida" },
                        "fhDateChegada": { hidden: false, label: "FH Dia da Chegada" },
                        "requisicaoProjectNo": { hidden: false, label: "Nº Ordem/Projeto" },
                        "requisicaoClientNo": { hidden: false, label: "Req Cliente Nº" },
                        "requisicaoClientName": { hidden: false, label: "Req Cliente Nome" },
                        "requisicaoAcordosPrecos": { hidden: false, label: "Req Acordos Preços" },
                        "requisicaoUrgente": { hidden: false, label: "Req Urgente" },
                        "requisicaoOrcamentoEmAnexo": { hidden: false, label: "Req Oçamento Em Anexo" },
                        "requisicaoImobilizado": { hidden: false, label: "Req Imobilizado" },
                        "requisicaoExclusivo": { hidden: false, label: "Req Exclusivo" },
                        "requisicaoJaExecutado": { hidden: false, label: "Req Já Executado" },
                        "requisicaoAmostra": { hidden: false, label: "Req Amostra" },
                        "requisicaoEquipamento": { hidden: false, label: "Req Equipamento" },
                        "requisicaoReposicaoDeStock": { hidden: false, label: "Req Reposição De Stock" },
                        "requisicaoPrecoIvaIncluido": { hidden: false, label: "Req Preço IVA Incluído" },
                        "requisicaoAdiantamento": { hidden: false, label: "Req Adiantamento" },
                        "requisicaoPedirOrcamento": { hidden: false, label: "Req Pedir Orçamento" },
                        "requisicaoRoupaManutencao": { hidden: false, label: "Req Roupa Manutenção" },
                        "requestUser": { hidden: false, label: "Solicitado Por" },
                        "value": { hidden: false, label: "Valor" },
                        "statusText": { hidden: false, label: "Estado" },
                        "level": { hidden: false, label: "Nivel" },
                        "region": { hidden: false, label: "Cód. Região" },
                        "responsabilityCenter": { hidden: false, label: "Cód. Cresp" }
                    };

                    if (localStorage["approvals.ToggleColumn"]) {
                        var keys = Object.keys(columns);
                        var storedColumns = JSON.parse(localStorage["approvals.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columns[keys[i]] = storedColumns[keys[i]];
                        }
                    };
                    this._columns = columns;
                },
                _toggleColumn: function (event) {
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["approvals.ToggleColumn"] = JSON.stringify(this._columns);
                    }
                },
                _getColumnItemClass: function (columnIndex) {
                    return !this._columns[columnIndex].hidden ? "selected" : "";
                },
                _toArray: function (obj) {
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                }
                /* end - ColumnToggle */

            });
        });
    </script>

</dom-module>


