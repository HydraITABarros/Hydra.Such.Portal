@{
    ViewData["Title"] = "Configuração de Aprovações";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-grid.html">
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-input/paper-input.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-combo-box/vaadin-combo-box.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html">
<!--Datepicker com correção de bug que impede visualização nas grids -->
<link rel="import" href="/lib/vaadin-date-picker-3.0.0-alpha1/vaadin-date-picker.html">
<link rel="import" href="~/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="~/lib/paper-collapse-item/paper-collapse-group.html">
<link rel="import" href="~/lib/paper-collapse-item/paper-collapse-item.html">

<x-approvals></x-approvals>

<dom-module id="x-approvals">
    <template>
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="~/css/main.css" />

        <custom-style>
            <style is="custom-style">
                input[readonly] {
                    border: 2px solid transparent;
                }

                input {
                    font: inherit;
                }

                paper-input {
                    max-width: 450px !important;
                }

                /*ACORDEÃO*/
                paper-collapse-item {
                    --paper-item: {
                        padding: 0 0;
                    };
                    --paper-collapse-item-header: {
                        padding: 0 15px;
                        color: #333;
                        background-color: #f5f5f5;
                        border-bottom: solid #ddd 1px;
                        border-top-left-radius: 3px;
                        border-top-right-radius: 3px;
                    };
                }
            </style>
        </custom-style>

        @*POPULATE GRID*@
        <iron-ajax url="/Administracao/GetApprovalConfig"
                   last-response="{{result}}"
                   method="post"
                   auto
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json">
        </iron-ajax>

        @*POPULATE Update*@
        <iron-ajax url="/Administracao/UpdateApprovalConfig"
                   last-response="{{result}}"
                   method="post"
                   handle-as="json"
                   id="ajax_update"
                   on-response="_updateResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/Administracao/DeteleApprovalConfig"
                   last-response="{{deleteResult}}"
                   method="post"
                   handle-as="json"
                   id="ajax_delete"
                   on-response="_deleteResponse"
                   content-type="application/json">
        </iron-ajax>

        @*CRUD NEW PROFILEMODEL*@
        <iron-ajax url="/PopulateDropdowns/GetApprovalTypes"
                   last-response="{{TypeRequisition}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetAreas"
                   last-response="{{AdminArea}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetGroupApproval"
                   last-response="{{GroupApprovalList}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetUtilizadores"
                   last-response="{{UserApprovalList}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode" last-response="{{ddResponsabilityCenterData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetRegionCode" last-response="{{ddRegionsData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode" last-response="{{ddFunctionalAreasData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <template is="dom-if" if="{{ _permissions.update }}">
            <div class="subMenu">
                <paper-button id="btnGoBack" class="tablinks" on-tap="_goBack"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp; Voltar</paper-button>
                <paper-button id="btnAddNew" class="tablinks" on-tap="_update" disabled="{{ _permissionsUpdate }}"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                <paper-button id="btnCancel" class="tablinks" on-tap="_cancel" disabled="{{ _permissionsUpdate }}"><i class="fa fa-undo" aria-hidden="true"></i>&nbsp; Cancelar</paper-button>
            </div>
        </template>

        <paper-collapse-group>
            <paper-collapse-item class="panel-heading" header="Novo Registo" closed>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[TypeRequisition]]" id="ddType" item-value-path="id" item-label-path="value" value="{{ddType}}" label="Tipo" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <b>[[item.value]]</b>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[ddFunctionalAreasData]]" id="ddFunctionalArea" item-value-path="id" item-label-path="id" value="{{ddFunctionalAreas}}" label="Área Funcional" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <table width="500px">
                                        <tr>
                                            <td width="10%">[[item.id]]</td>
                                            <td width="80%"> <b>[[item.value]]</b></td>
                                        </tr>
                                    </table>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[ddResponsabilityCenterData]]" id="ddResponsabilityCenter" item-value-path="id" item-label-path="id" value="{{ddResponsabilityCenter}}" label="Centro Responsabilidade" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <table width="500px">
                                        <tr>
                                            <td width="20%">[[item.id]]</td>
                                            <td width="80%"> <b>[[item.value]]</b></td>
                                        </tr>
                                    </table>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[ddRegionsData]]" id="ddRegion" item-value-path="id" item-label-path="id" value="{{ddRegion}}" label="Região" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <table width="300px">
                                        <tr>
                                            <td width="10%">[[item.id]]</td>
                                            <td width="80%"> <b>[[item.value]]</b></td>
                                        </tr>
                                    </table>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-text-field id="ddLevelApproval" type="number" label="Nivel Aprovação" disabled="{{ _permissionsCreate }}"></vaadin-text-field>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-text-field id="ddValueApproval" type="number" label="Valor Aprovação" disabled="{{ _permissionsCreate }}"></vaadin-text-field>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[UserApprovalList]]" id="ddUserApproval" on-change="_onChangeUser" item-value-path="id" item-label-path="value" value="{{item.approvalUser}}" label="Utilizador Aprovação" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <table width="200px">
                                        <tr>
                                            <td width="60%"> <b>[[item.value]]</b></td>
                                            <td width="40%">[[item.id]]</td>
                                        </tr>
                                    </table>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-combo-box items="[[GroupApprovalList]]" id="ddGroupApproval" on-change="_onChangeGroup" item-value-path="id" item-label-path="value" value="{{ddGroupDescription}}" label="Grupo Aprovação" disabled="{{ _permissionsCreate }}">
                                <template>
                                    <table width="140px">
                                        <tr>
                                            <td width="80%"> <b>[[item.value]]</b></td>
                                            <td width="20%">[[item.id]]</td>

                                        </tr>
                                    </table>
                                </template>
                            </vaadin-combo-box>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-date-picker id="ddDataStart" label="Data Inicial" disabled="{{ _permissionsCreate }}"></vaadin-date-picker>
                        </div>

                        <div class="col-lg-3">
                            <vaadin-date-picker id="ddDataEnd" label="Data Final" disabled="{{ _permissionsCreate }}"></vaadin-date-picker>
                        </div>

                        <div class="col-lg-2 alignPoga">
                            <paper-button id="btnAddNew" class="btnSave" on-tap="_createApproval" disabled="{{ _permissionsCreate }}">Criar</paper-button>
                        </div>
                    </div>
                </div>
            </paper-collapse-item>
        </paper-collapse-group>

        <br />

        <vaadin-grid id="gridApprovals" aria-label="gridApprovals" items="[[result]]" class="grid" multi-sort="true">
            <vaadin-grid-column resizable width="5%" hidden>
                <template class="header">
                    <vaadin-grid-sorter path="id">Código</vaadin-grid-sorter>
                    <vaadin-grid-filter path="id" />
                </template>
                <template>
                    <vaadin-text-field value="{{item.id}}" disabled></vaadin-text-field>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="10%">
                <template class="header">
                    <vaadin-grid-sorter path="type">Tipo</vaadin-grid-sorter>
                    <vaadin-grid-filter path="type" />
                </template>
                <template>
                    <vaadin-combo-box items="[[TypeRequisition]]" item-value-path="id" item-label-path="value" value="{{item.type}}" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="200px">
                                <tr>
                                    <td width="70%"> <b>[[item.value]]</b></td>
                                    <td width="30%">[[item.id]]</td>

                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="7%">
                <template class="header">
                    <vaadin-grid-sorter path="region">Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="region" />
                </template>
                <template>
                    <vaadin-combo-box items="[[ddRegionsData]]" item-value-path="id" item-label-path="id" value="{{item.region}}" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="500px">
                                <tr>
                                    <td width="15%">[[item.id]]</td>
                                    <td width="85%"> <b>[[item.value]]</b></td>

                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="10%">
                <template class="header">
                    <vaadin-grid-sorter path="functionalArea">Área Funcional</vaadin-grid-sorter>
                    <vaadin-grid-filter path="functionalArea" />
                </template>
                <template>
                    <vaadin-combo-box items="[[ddFunctionalAreasData]]" item-value-path="id" item-label-path="id" value="{{item.functionalArea}}" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="500px">
                                <tr>
                                    <td width="10%">[[item.id]]</td>
                                    <td width="90%"> <b>[[item.value]]</b></td>
                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="15%">
                <template class="header">
                    <vaadin-grid-sorter path="responsabilityCenter">Centro de Responsabilidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="responsabilityCenter" />
                </template>
                <template>
                    <vaadin-combo-box items="[[ddResponsabilityCenterData]]" item-value-path="id" item-label-path="id" value="{{item.responsabilityCenter}}" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="500px">
                                <tr>
                                    <td width="15%">[[item.id]]</td>
                                    <td width="85%"> <b>[[item.value]]</b></td>

                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="7%">
                <template class="header">
                    <vaadin-grid-sorter path="level">Nivel Aprovação</vaadin-grid-sorter>
                    <vaadin-grid-filter path="level" />
                </template>
                <template>
                    <vaadin-text-field value="{{item.level}}" disabled="{{ _permissionsUpdate }}"></vaadin-text-field>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="7%">
                <template class="header">
                    <vaadin-grid-sorter path="approvalValue">Valor Aprovação</vaadin-grid-sorter>
                    <vaadin-grid-filter path="approvalValue" />
                </template>
                <template>
                    <vaadin-text-field value="{{item.approvalValue}}" disabled="{{ _permissionsUpdate }}"></vaadin-text-field>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="10%">
                <template class="header">
                    <vaadin-grid-sorter path="approvalUser">Utilizador Aprovação</vaadin-grid-sorter>
                    <vaadin-grid-filter path="approvalUser" />
                </template>
                <template>
                    <vaadin-combo-box items="[[UserApprovalList]]" item-value-path="id" item-label-path="value" value="{{item.approvalUser}}" on-change="_onChangeUser" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="200px">
                                <tr>
                                    <td width="60%"> <b>[[item.value]]</b></td>
                                    <td width="40%">[[item.id]]</td>

                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="15%">
                <template class="header">
                    <vaadin-grid-sorter path="approvalGroup">Grupo Aprovação</vaadin-grid-sorter>
                    <vaadin-grid-filter path="approvalGroupText" />

                </template>
                <template>
                    <vaadin-combo-box items="[[GroupApprovalList]]" item-value-path="id" item-label-path="value" on-change="_onChangeGroup" value="{{item.approvalGroup}}" disabled="{{ _permissionsCreate }}">
                        <template>
                            <table width="200px">
                                <tr>
                                    <td width="70%"> <b>[[item.value]]</b></td>
                                    <td width="30%">[[item.id]]</td>

                                </tr>
                            </table>
                        </template>
                    </vaadin-combo-box>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="11%">
                <template class="header">
                    <vaadin-grid-sorter path="startDate">Data Inicial</vaadin-grid-sorter>
                    <vaadin-grid-filter path="startDate" />
                </template>
                <template>
                    <vaadin-date-picker id="_StartDate" name="_StartDate" value="{{item.startDate}}" disabled="{{ _permissionsUpdate }}"></vaadin-date-picker>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column resizable width="11%">
                <template class="header">
                    <vaadin-grid-sorter path="endDate">Data Final</vaadin-grid-sorter>
                    <vaadin-grid-filter path="endDate" />
                </template>
                <template>
                    <vaadin-date-picker id="_EndDate" name="_EndDate" value="{{item.endDate}}" disabled="{{ _permissionsUpdate }}"></vaadin-date-picker>
                </template>
            </vaadin-grid-column>

            <template is="dom-if" if="{{ _permissions.delete }}">
                <vaadin-grid-column resizable width="5%">
                    <template class="header">
                    </template>
                    <template>
                        <center>
                            <paper-button class="btnRemove tableBtn" raised on-tap="_deleteAccessProfile" disabled="{{_permissionsDelete}}" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                        </center>
                    </template>
                </vaadin-grid-column>
            </template>
        </vaadin-grid>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>
    </template>

    <script>
        var CreateValue = true, UpdateValue = true, DeleteValue = true;
         if ('@Html.Raw(Json.Serialize(ViewBag.CreatePermissions))' =="false") {
            CreateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.UpdatePermissions))' =="false") {
            UpdateValue = false;
        }
        if ('@Html.Raw(Json.Serialize(ViewBag.DeletePermissions))' =="false") {
            DeleteValue = false;
        }
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-approvals',
                properties: {
                    _permissionsUpdate: {
                        type: Boolean,
                        value: UpdateValue
                    },
                    _permissionsCreate: {
                        type: Boolean,
                        value: CreateValue
                    },
                    _permissionsDelete: {
                        type: Boolean,
                        value: DeleteValue
                    },
                    _permissions: {
	                    type: Array,
	                    value: @Html.Raw(Json.Serialize(ViewBag.UPermissions))
                    },
                },
                ready: function () {
                    this.$.page_databound_ajax.generateRequest();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                    });
                    $(window).trigger('resize');
                },

                fixGridToBottom: function () {
                    var grid_el = $(this.$.gridApprovals);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top;
                    var height = parentHeight - offsetTop;
                    $(this.$.gridApprovals).height(height);
                },

                openToast: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                openToastError: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },

                _update: function () {
                    if (this.result != null) {
                        var hasInvalid = this.result.some(x => x.level == null || x.level < 1);
                        if (hasInvalid) {
                            this.openToastError("O nivel de aprovação tem que ser superior a Zero");
                            return;
                        }
                        var hasInvalidDataStart = this.result.some(x => x.startDate == null || x.startDate == "");
                        if (hasInvalidDataStart) {
                            this.openToastError("A Data Inicial é de preenchimento obrigatório.");
                            return;
                        }
                        var hasInvalidDataEnd = this.result.some(x => x.endDate == null || x.endDate == "");
                        if (hasInvalidDataEnd) {
                            this.openToastError("A Data Final é de preenchimento obrigatório.");
                            return;
                        }
                    }
                    this.$.ajax_update.url = "/Administracao/UpdateApprovalConfig";
                    this.$.ajax_update.body = JSON.stringify(this.result);
                    this.$.ajax_update.generateRequest();
                },
                _createApproval: function () {
                    if (this.$.ddLevelApproval.value != null && this.$.ddLevelApproval.value != "") {
                        if (this.$.ddDataStart.value != null && this.$.ddDataStart.value != "") {
                            if (this.$.ddDataEnd.value != null && this.$.ddDataEnd.value != "") {
                                var line = {
                                    Type: this.$.ddType.value,
                                    Area: 0,//this.$.ddArea.value,
                                    Region: this.$.ddRegion.value,
                                    FunctionalArea: this.$.ddFunctionalArea.value,
                                    ResponsabilityCenter: this.$.ddResponsabilityCenter.value,
                                    Level: this.$.ddLevelApproval.value,
                                    ApprovalUser: this.$.ddUserApproval.value,
                                    ApprovalGroup: this.$.ddGroupApproval.value,
                                    ApprovalValue: this.$.ddValueApproval.value,
                                    StartDate: this.$.ddDataStart.value,
                                    EndDate: this.$.ddDataEnd.value
                                }
                                debugger;;
                                if (this.result == null) {
                                    this.result = line;
                                }
                                else {
                                    this.result.push(line);
                                }
                                this.$.ajax_update.body = JSON.stringify(this.result);
                                this.$.ajax_update.url = "/Administracao/UpdateApprovalConfig";
                                this.$.ajax_update.generateRequest();
                            }
                            else {
                                this.openToastError("A Data Final é de preenchimento obrigatório.");
                            }
                        }
                        else {
                            this.openToastError("A Data Inicial é de preenchimento obrigatório.");
                        }
                    }
                    else {
                        this.openToastError("O nivel de aprovação tem que ser superior a Zero");
                    }
                },
                _onChangeUser: function (data) {
                    this.$.ddGroupApproval.value = "";
                    if (data.model != null) {
                        data.model.item.approvalGroup = "";
                        this.$.gridApprovals.clearCache();
                    }


                },
                _onChangeGroup: function (data) {

                    this.$.ddUserApproval.value = "";
                    if (data.model != null) {
                        data.model.item.approvalUser = "";
                        this.$.gridApprovals.clearCache();
                    }
                },
                _updateResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {

                        this.openToast('Atualizado com sucesso!');
                        this.$.page_databound_ajax.generateRequest();
                        this.$.gridApprovals.clearCache();

                        this.$.ddType.value = "";
                        //this.$.ddArea.value = "";
                        this.$.ddLevelApproval.value = "";
                        this.$.ddUserApproval.value = "";
                        this.$.ddGroupApproval.value = "";
                        this.$.ddValueApproval.value = "";
                        this.$.ddDataStart.value = "";
                        this.$.ddDataEnd.value = "";

                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                },
                _deleteResponse: function (e) {
                    var self = this;
                    if (e.detail.status === 200) {

                        this.openToast('Eliminado com sucesso!');
                        this.$.page_databound_ajax.generateRequest();
                        this.$.gridApprovals.clearCache();
                    }
                    else {
                        this.openToastError('Ocorreu um erro ao atualizar o perfil modelo.');
                    }
                },
                _cancel: function () {
                    this.$.page_databound_ajax.generateRequest();
                    this.$.gridApprovals.clearCache();
                },

                _deleteAccessProfile: function (data) {
                    var index = this.result.indexOf(data.model.item);
                    this.result.splice(index, 1);
                    this.$.ajax_delete.body = JSON.stringify(data.model.item);
                    this.$.ajax_delete.generateRequest();
                },
                _goBack: function (e) {
                    window.history.back();
                },


                _parseAprovGroup: function (param) {
                    if (param != undefined && this.GroupApprovalList != undefined) {
                        var sel = this.GroupApprovalList.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },


            });
        });
    </script>
</dom-module>

