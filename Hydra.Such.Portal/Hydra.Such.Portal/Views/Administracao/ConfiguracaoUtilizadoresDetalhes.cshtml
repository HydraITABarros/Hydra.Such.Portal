
@{
    ViewData["Title"] = "Configuração de Utilizador";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">

<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />

<link rel="import" href="~/lib/iron-form/iron-form.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />

<link rel="import" href="/lib/paper-dialog/paper-dialog.html" />
<link rel="import" href="/lib/paper-dialog-behavior/paper-dialog-behavior.html" />

<link rel="import" href="/lib/such-selectbox/such-selectbox.html">


<!--ACORDEÃO-->
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-group.html">
<link rel="import" href="/lib/paper-collapse-item/paper-collapse-item.html">

<x-details-config-users></x-details-config-users>
<dom-module id="x-details-config-users">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <style>
            /*ACORDEÃO*/
            paper-collapse-item {
                --paper-item: {
                    padding: 0 0;
                };
                --paper-collapse-item-header: {
                    padding: 0 15px;
                    color: #333;
                    background-color: #f5f5f5;
                    border-bottom: solid #ddd 1px;
                    border-top-left-radius: 3px;
                    border-top-right-radius: 3px;

                };
            }
        </style>

        @*POPULATE GRID*@
        <!-- DROPDOWNS POPULATE -->
        <iron-ajax url="/PopulateDropdowns/GetNoSeries" last-response="{{LNoSeries}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetRegionCode" last-response="{{LRegionCodes}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode" last-response="{{LAreaCodes}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        @*<iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode" last-response="{{LResponsabilityCenterCodes}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>*@
        <iron-ajax url="/PopulateDropdowns/GetBillingReceptionAreas" last-response="{{BillingReceptionAreas}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetBillingReceptionUserProfiles" last-response="{{BillingReceptionUserProfiles}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetUtilizadores" last-response="{{LListaUtilizadores}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetNAVResponsabilityCenter" last-response="{{LRespoCenterNav}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>

        <!-- SGPPF.b -->
        <iron-ajax url="/PopulateDropdowns/GetTipoUtilizadorFluxoFormacao"
                   last-response="{{ TiposUtilizadorFormacao }}" auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>
        <!-- SGPPF.e -->

        <iron-ajax url="/PopulateDropdowns/GetAllResponsabilityCenterCodeFilterByAreaCode"
                   last-response="{{LResponsabilityCenterCodes}}"
                   method="post"
                   handle-as="json"
                   id="page_GetAllResponsabilityCenterCodeFilterByAreaCode_ajax"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetNumerations"
                   last-response="{{LReceptionConfig}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/GetUserConfigData"
                   last-response="{{data}}"
                   method="post"
                   handle-as="json"
                   id="page_databound_ajax"
                   content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/CopiarAcessosUtilizador"
                   last-response="{{copiarAcessosUtilizador}}"
                   method="post"
                   handle-as="json"
                   id="page_CopiarAcessosUtilizador_ajax"
                   on-response="_copiarAcessosUtilizadorResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetUtilizadores"
                   last-response="{{superiorHierarquicoList}}"
                   auto
                   method="post"
                   handle-as="json"
                   content-type="application/json">
        </iron-ajax>


        @if (ViewBag.UserId != "0")
        {
            <div class="subMenu">
                <template is="dom-if" if="{{ _permissions.create }}">
                    <paper-button class="tablinks" on-tap="_redirectToNewUserConfigForm"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Novo</paper-button>
                </template>
                <template is="dom-if" if="{{ _permissions.update }}">
                    <paper-button class="tablinks" on-tap="_update"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                </template>
            </div>
        }

        <div class="row">
            <div class="col-lg-3">
                <vaadin-text-field id="idUser" name="idUser" label="Id Utilizador" value="{{data.idUser}}"></vaadin-text-field>
            </div>
            <div class="col-lg-3">
                <vaadin-text-field id="UserName" name="UserName" label="Nome Utilizador" value="{{data.name}}"></vaadin-text-field>
            </div>
            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.administrator}}"> Administrador</vaadin-checkbox>
            </div>
            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.active}}"> Ativo</vaadin-checkbox>
            </div>
        </div>
        <div class="row break_clear">
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LRegionCodes]]" id="codigoRegiao" item-value-path="id" item-label-path="value" value="{{data.regiao}}" label="Dim. Região">
                    <template>
                        <table width="300px">
                            <tr>
                                <td width="15%">[[item.id]]</td>
                                <td width="85%"> <b>[[item.value]]</b></td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <such-selectbox id="codigoAreaFuncional" value="{{data.area}}" label="Dim. Área Funcional"
                                items="[[LAreaCodes]]"
                                text-path="value"
                                value-path="id"
                                on-change="_GetAllcodigoCentroResponsabilidade"
                                fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Área Funcional"}]'>
                </such-selectbox>
                @*<vaadin-combo-box items="[[LAreaCodes]]" id="codigoAreaFuncional" item-value-path="id" item-label-path="value" value="{{data.area}}" label="Dim. Área Funcional">
                    <template>
                        <table width="400px">
                            <tr>
                                <td width="20%">[[item.id]]</td>
                                <td width="80%"> <b>[[item.value]]</b></td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>*@
            </div>
            <div class="col-sm-3">
                <such-selectbox id="codigoCentroResponsabilidade" value="{{data.cresp}}" label="Dim. Centro Responsabilidade"
                                items="[[LResponsabilityCenterCodes]]"
                                text-path="value"
                                value-path="id"
                                fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Centro Responsabilidade"}]'>
                </such-selectbox>
                @*<vaadin-combo-box items="[[LResponsabilityCenterCodes]]" id="codigoCentroResponsabilidade" item-value-path="id" item-label-path="value" value="{{data.cresp}}" label="Dim. Centro Responsabilidade">
                    <template>
                        <table width="350px">
                            <tr>
                                <td width="10%">[[item.id]]</td>
                                <td width="90%"> <b>[[item.value]]</b></td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>*@
            </div>

            <div class="col-sm-3">
                <vaadin-text-field id="EmployeeNo" name="EmployeeNo" label="Nº Mecanográfico" value="{{data.employeeNo}}"></vaadin-text-field>
            </div>
        </div>
        <div class="row break_clear">
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LReceptionConfig]]" id="LReceptionConfig" item-value-path="id" item-label-path="value" value="{{data.receptionConfig}}" label="Numeração Receção Doc. Compras">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" id="LNumCreditNotes" item-value-path="id" item-label-path="value" value="{{data.numSerieNotasCredito}}" label="Numeração Notas de Crédito">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" id="LNumDebitNotes" item-value-path="id" item-label-path="value" value="{{data.numSerieNotasDebito}}" label="Numeração Notas de Débito">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" id="LNumInvoices" item-value-path="id" item-label-path="value" value="{{data.numSerieFaturas}}" label="Numeração Faturas">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
        </div>
        <div class="row break_clear">
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" id="PrePurchInvoicesNoSerie" item-value-path="id" item-label-path="value" value="{{data.numSeriePreFaturasCompraCF}}" label="Numeração Pré-Faturas Compra CF">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" item-value-path="id" item-label-path="value" value="{{data.numSeriePreFaturasCompraCP}}" label="Numeração Pré-Faturas Compra CP">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LNoSeries]]" id="PurchCreditNoteNoSerie" item-value-path="id" item-label-path="value" value="{{data.numSerieNotasCreditoCompra}}" label="Numeração Notas Crédito Compra">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <div class="col-sm-3">
                <vaadin-combo-box items="[[LRespoCenterNav]]" id="codigoCentroResponsabilidade" item-value-path="code" item-label-path="name" value="{{data.centroresp}}" label="Centro Responsabilidade">
                    <template>
                        <table width="350px">
                            <tr>
                                <td width="10%">[[item.code]]</td>
                                <td width="90%"> <b>[[item.name]]</b></td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>
            </div>
        </div>
        <div class="row break_clear">
            <div class="col-sm-3">
                <vaadin-combo-box items="[[superiorHierarquicoList]]" id="ddsuperiorHierarquico" item-value-path="id" item-label-path="value" value="{{data.superiorHierarquico}}" label="Superior Hierárquico">
                    <template>
                        <table width="200px">
                            <tr>
                                <td width="60%"> <b>[[item.value]]</b></td>
                                <td width="40%">[[item.id]]</td>
                            </tr>
                        </table>
                    </template>
                </vaadin-combo-box>
            </div>

            <!-- SGPPF.b -->
            <div class="col-lg-3">
                <vaadin-combo-box items="[[TiposUtilizadorFormacao]]" id="tipoUtilizadorFormacao" item-value-path="id" item-label-path="value" value="{{data.tipoUtilizadorFormacao}}" label="Tipo Utilizador Fluxo Formação">
                    <template>
                        <b>[[item.value]]</b>
                    </template>
                </vaadin-combo-box>
            </div>
            <!-- SGPPF.e -->
        </div>
        <div class="row break_clear">
            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.requisicaoStock}}"> Reposição Stock</vaadin-checkbox>
            </div>
            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.criarProjetoSemAprovacao}}"> Criar Projeto sem Aprovação</vaadin-checkbox>
            </div>

            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.cmHistoricoToActivo}}"> Consulta Mercado Histórico para Ativo</vaadin-checkbox>
            </div>

            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.arquivarREQPendentes}}"> Arquivar Requisições Pendentes</vaadin-checkbox>
            </div>

            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.criarMedidasCorretivas}}"> Criar Medidas Corretivas</vaadin-checkbox>
            </div>

            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.verFaturas}}"> Ver Faturas</vaadin-checkbox>
            </div>
        </div>
        <div class="row break_clear">
            <div class="col-lg-2 alignPoga">
                <vaadin-checkbox checked="{{data.editarPrecoUnitario}}"> Editar Preço Unitário</vaadin-checkbox>
            </div>
        </div>
        <paper-collapse-group>
            <paper-collapse-item class="panel-heading" header="Procedimentos" closed>
                <div class="panel-body">
                    <div class="row break_clear">
                        <div class="col-sm-3">
                            <vaadin-text-field id="ProcedimentosEmailEnvioParaCA" name="ProcedimentosEmailEnvioParaCA" label="Email envio para CA" value="{{data.procedimentosEmailEnvioParaCA}}"></vaadin-text-field>
                        </div>
                        <div class="col-sm-3">
                            <vaadin-text-field id="ProcedimentosEmailEnvioParaArea" name="ProcedimentosEmailEnvioParaArea" label="Email envio para Área 1" value="{{data.procedimentosEmailEnvioParaArea}}"></vaadin-text-field>
                        </div>
                        <div class="col-sm-3">
                            <vaadin-text-field id="ProcedimentosEmailEnvioParaArea2" name="ProcedimentosEmailEnvioParaArea2" label="Email envio para Área 2" value="{{data.procedimentosEmailEnvioParaArea2}}"></vaadin-text-field>
                        </div>
                    </div>
                </div>
            </paper-collapse-item>

            <paper-collapse-item class="panel-heading" header="Receção Faturas" closed>
                <div class="panel-body">
                    <div class="row break_clear">
                        <div class="col-sm-3">
                            <vaadin-combo-box items="[[BillingReceptionAreas]]" id="cmbBillingRecArea" item-value-path="id" item-label-path="value" value="{{data.rfPerfil}}" label="Perfil">
                                <template>
                                    <b>[[item.value]]</b>
                                </template>
                            </vaadin-combo-box>
                        </div>
                        <div class="col-sm-3">
                            <vaadin-combo-box items="[[BillingReceptionUserProfiles]]" id="cmbBillingRecUserProfile" item-value-path="id" item-label-path="value" value="{{data.rfPerfilVisualizacao}}" label="Perfil Visualização">
                                <template>
                                    <b>[[item.value]]</b>
                                </template>
                            </vaadin-combo-box>
                        </div>
                        <div class="col-sm-3">
                            <vaadin-text-field id="txtRFFiltroArea" name="txtRFFiltroArea" label="Filtro Área" value="{{data.rfFiltroArea}}"></vaadin-text-field>
                        </div>
                        <div class="col-sm-3 alignPoga">
                            <vaadin-checkbox id="chkRFRespostaContabilidade" checked="{{ data.rfRespostaContabilidade }}">Resposta Contabilidade</vaadin-checkbox>
                            <vaadin-checkbox id="chkRFAlterarDestinatarios" checked="{{ data.rfAlterarDestinatarios }}">Alterar Destinatários</vaadin-checkbox>
                        </div>
                    </div>
                    <div class="row break_clear">
                        <div class="col-sm-3">
                            <vaadin-text-field id="txtRFNomeAbreviado" name="txtRFNomeAbreviado" label="Nome Abreviado" value="{{data.rfNomeAbreviado}}"></vaadin-text-field>
                        </div>
                        <div class="col-sm-3">
                            <vaadin-text-field id="txtRFMailEnvio" name="txtRFMailEnvio" label="Mail Envio" value="{{data.rfMailEnvio}}"></vaadin-text-field>
                        </div>
                    </div>
                </div>
            </paper-collapse-item>

            <paper-collapse-item class="panel-heading" header="Pedidos de Pagamento" closed>
                <div class="panel-body">
                    <div class="row break_clear">
                        <div class="col-sm-3">
                            <such-selectbox id="ddAprovadorPedidoPag1" value="{{data.aprovadorPedidoPag1}}" label="Aprovador Pedido Pag. 1"
                                            items="[[superiorHierarquicoList]]"
                                            text-path="value"
                                            value-path="id"
                                            fields='[{"field":"id", "name":"ID"}, {"field":"value", "name":"Nome"}]'>
                            </such-selectbox>
                        </div>

                        <div class="col-sm-3">
                            <such-selectbox id="ddAprovadorPedidoPag2" value="{{data.aprovadorPedidoPag2}}" label="Aprovador Pedido Pag. 2"
                                            items="[[superiorHierarquicoList]]"
                                            text-path="value"
                                            value-path="id"
                                            fields='[{"field":"id", "name":"ID"}, {"field":"value", "name":"Nome"}]'>
                            </such-selectbox>
                        </div>

                        <div class="col-lg-3 alignPoga">
                            <vaadin-checkbox checked="{{data.anulacaoPedidoPagamento}}"> Anulação Pedido Pagamento</vaadin-checkbox>
                        </div>
                        <div class="col-lg-3 alignPoga">
                            <vaadin-checkbox checked="{{data.validarPedidoPagamento}}"> Validar Pedido Pagamento</vaadin-checkbox>
                        </div>
                    </div>
                </div>
            </paper-collapse-item>

        </paper-collapse-group>

        <iron-ajax url="/Administracao/CreateUserConfig" id="ajax_create" last-response="{{data}}" method="post" handle-as="json" on-response="_responseProcessor" content-type="application/json; charset=utf-8"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetAreas" last-response="{{AreasData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFeatures" last-response="{{FeaturesData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetUserProfileModels" last-response="{{UserProfileModelsData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetUserGruposAprovacaoData" last-response="{{UserGruposAprovacaoData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensions" last-response="{{DimensionData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensionValues" id="dimensionValue_ajax" last-response="{{DimensionValueData}}" auto method="post" params='{"dimensionId": ""}' handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensionValuesFromLines" id="dimensionValueInGrid_ajax" last-response="{{DimensionValueGridData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensionValues" id="dimensionValueInGridOPT1_ajax" auto last-response="{{DimensionValuesForRegion}}" method="post" params='{"dimensionId": 1}' handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensionValues" id="dimensionValueInGridOPT2_ajax" auto last-response="{{DimensionValuesForArea}}" method="post" params='{"dimensionId": 2}' handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetDimensionValues" id="dimensionValueInGridOPT3_ajax" auto last-response="{{DimensionValuesForResponsability}}" method="post" params='{"dimensionId": 3}' handle-as="json" content-type="application/json"></iron-ajax>

        <iron-ajax url="/Administracao/DeleteUserDimension" last-response="{{UserDimensionDeleted}}" method="post" handle-as="json" id="page_deleteuserdimension_ajax" on-response="_deleteUserDimensionResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/CreateUserDimension" last-response="{{UserDimensionCreated}}" method="post" handle-as="json" id="page_createuserdimension_ajax" on-response="_createUserDimensionResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/DeleteUserAccess" last-response="{{UserAccessDeleted}}" method="post" handle-as="json" id="page_deleteuseraccess_ajax" on-response="_deleteUserAccessResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/CreateUserAccess" last-response="{{UserAccessCreated}}" method="post" handle-as="json" id="page_createuseraccess_ajax" on-response="_createUserAccessResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/DeleteUserProfile" last-response="{{UserProfileDeleted}}" method="post" handle-as="json" id="page_deleteuserprofile_ajax" on-response="_deleteUserProfileResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/CreateUserProfile" last-response="{{UserProfileCreated}}" method="post" handle-as="json" id="page_createuserprofile_ajax" on-response="_createUserProfileResponse" content-type="application/json"></iron-ajax>



        <iron-ajax url="/Administracao/DeleteUserGruposAprovacao" last-response="{{UserGruposAprovacaoDeleted}}" method="post" handle-as="json" id="page_deleteUserGruposAprovacao_ajax" on-response="_deleteUserGruposAprovacaoResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/CreateUserGruposAprovacao" last-response="{{UserGruposAprovacaoCreated}}" method="post" handle-as="json" id="page_createUserGrupoAprovacao_ajax" on-response="_createUserGrupoAprovacaoResponse" content-type="application/json"></iron-ajax>



        <iron-ajax url="/PopulateDropdowns/GetAllLocations" last-response="{{CBLocations}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/CreateUserAcessosLocalizacoes" last-response="{{UserAcessosLocalizacoesCreated}}" method="post" handle-as="json" id="page_createuserAcessosLocalizacoes_ajax" on-response="_createUserAcessosLocalizacoesResponse" content-type="application/json"></iron-ajax>
        <iron-ajax url="/Administracao/DeleteUserAcessosLocalizacoes" last-response="{{UserAcessosLocalizacoesDeleted}}" method="post" handle-as="json" id="page_deleteuserAcessosLocalizacoes_ajax" on-response="_deleteUserAcessosLocalizacoesResponse" content-type="application/json"></iron-ajax>

        @if (ViewBag.UserId != "0")
        {
            <paper-collapse-item class="panel-heading" header="Perfis Utilizadores" closed>
                <div class="panel-body">
                    <template is="dom-if" if="{{ _permissions.update }}">
                        <div class="row">
                            <div class="col-lg-3">
                                <vaadin-combo-box items="[[UserProfileModelsData]]" id="_Profiles" item-value-path="id" item-label-path="value" value="{{ddUserProfile}}" label="Perfil">
                                    <template>
                                        <paper-icon-item>
                                            <paper-item-body two-line>
                                                <div>[[item.value]]</div>
                                            </paper-item-body>
                                        </paper-icon-item>
                                    </template>
                                </vaadin-combo-box>
                            </div>
                            <div class="col-lg-3 alignPoga">
                                <paper-button class="btnEdit" raised on-tap="_createUserProfile"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Associar</paper-button>
                            </div>
                        </div>
                    </template>
                    <vaadin-grid id="gridUserProfiles" aria-label="gridUserProfiles" items="{{ data.userProfiles }}" class="grid">
                        <vaadin-grid-column width="20%">
                            <template class="header">
                                Perfil
                            </template>
                            <template>
                                <vaadin-combo-box items="[[UserProfileModelsData]]" disabled item-value-path="id" item-label-path="value" value="{{item.id}}">
                                    <template>
                                        <paper-icon-item>
                                            <paper-item-body two-line>
                                                <div>[[item.value]]</div>
                                            </paper-item-body>
                                        </paper-icon-item>
                                    </template>
                                </vaadin-combo-box>
                            </template>
                        </vaadin-grid-column>
                        <template is="dom-if" if="{{ _permissions.update }}">
                            <vaadin-grid-column width="80%">
                                <template class="header">
                                </template>
                                <template>
                                    <center>
                                        @*<paper-button raised id="btnCancel" class="btnRemove" on-tap="_deleteUserProfile"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                                        <paper-button raised id="btnCancel" class="btnRemove tableBtn" on-tap="_deleteUserProfile" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                                    </center>
                                </template>
                            </vaadin-grid-column>
                        </template>
                    </vaadin-grid>
                </div>
            </paper-collapse-item>

            <paper-collapse-item class="panel-heading" header="Grupos de Aprovação" closed>
                <div class="panel-body">
                    <template is="dom-if" if="{{ _permissions.update }}">
                        <div class="row">
                            <div class="col-lg-3">
                                <vaadin-combo-box items="[[UserGruposAprovacaoData]]" id="_ddGrupoAprovacao" item-value-path="id" item-label-path="value" value="{{ddGrupoAprovacao}}" label="Grupo Aprovação">
                                    <template>
                                        <paper-icon-item>
                                            <paper-item-body two-line>
                                                <div>[[item.value]]</div>
                                            </paper-item-body>
                                        </paper-icon-item>
                                    </template>
                                </vaadin-combo-box>
                            </div>

                            <div class="col-lg-2 alignPoga">
                                <vaadin-checkbox id="enviarEmailAlerta" checked="{{chkEnviarEmailAlerta}}">Enviar Email de Alerta</vaadin-checkbox>
                            </div>

                            <div class="col-lg-3 alignPoga">
                                <paper-button class="btnEdit" raised on-tap="_createUserGrupoAprovacao"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Associar</paper-button>
                            </div>
                        </div>
                    </template>

                    <vaadin-grid id="gridUserGruposAprovacao" items="{{ data.userGruposAprovacao }}" class="grid">
                        <vaadin-grid-column width="20%">
                            <template class="header">
                                Grupo Aprovação
                            </template>
                            <template>
                                {{ item.description }}
                            </template>
                        </vaadin-grid-column>
                        <template is="dom-if" if="{{ _permissions.update }}">
                            <vaadin-grid-column width="80%">
                                <template class="header">
                                </template>
                                <template>
                                    <center>
                                        <paper-button raised id="btnCancel" class="btnRemove tableBtn" on-tap="_deleteUserGruposAprovacao" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                                    </center>
                                </template>
                            </vaadin-grid-column>
                        </template>
                    </vaadin-grid>
                </div>
            </paper-collapse-item>

            <div class="row">
                <div class="col-lg-12">
                    <h2 class="separator">Acessos Utilizador</h2>
                </div>
            </div>
            <template is="dom-if" if="{{ _permissions.create }}">
                <div class="row">
                    <div class="col-lg-3">
                        <vaadin-combo-box items="[[FeaturesData]]" id="_Features" item-value-path="id" item-label-path="value" value="{{ddFeature}}" label="Funcionalidade">
                            <template>
                                <paper-icon-item>
                                    <paper-item-body two-line>
                                        <div>[[item.value]]</div>
                                    </paper-item-body>
                                </paper-icon-item>
                            </template>
                        </vaadin-combo-box>
                    </div>
                    <div class="col-lg-1 alignPoga">
                        <vaadin-checkbox id="_chkCreate" checked="{{chkCreate}}"> Inserção</vaadin-checkbox>
                    </div>
                    <div class="col-lg-1 alignPoga">
                        <vaadin-checkbox id="_chkRead" checked="{{chkRead}}"> Leitura</vaadin-checkbox>
                    </div>
                    <div class="col-lg-1 alignPoga">
                        <vaadin-checkbox id="_chkUpdate" checked="{{chkUpdate}}"> Modificação</vaadin-checkbox>
                    </div>
                    <div class="col-lg-1 alignPoga">
                        <vaadin-checkbox id="_chkDelete" checked="{{chkDelete}}"> Eliminação</vaadin-checkbox>
                    </div>
                    <div class="col-lg-1 alignPoga">
                        <vaadin-checkbox id="_chkVerTudo" checked="{{chkVerTudo}}"> Ver Tudo</vaadin-checkbox>
                    </div>
                    <div class="col-lg-2 alignPoga">
                        <center>
                            <paper-button class="btnSave" raised on-tap="_createUserAccess"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                        </center>
                    </div>
                    <div class="col-lg-2 alignPoga">
                        <center>
                            <paper-button class="tablinks" raised on-tap="_openCopiarAcessosUtilizador" title="Copiar Acessos" style="background-color:#71BCC1; color:white;"><i class="fa fa-copy" aria-hidden="true"></i>&nbsp; COPIAR ACESSOS</paper-button>
                        </center>
                    </div>
                </div>
            </template>
            <br />
            <vaadin-grid id="gridUserAccesses" aria-label="gridUserAccesses" items="{{ data.userAccesses }}" class="grid">
                <vaadin-grid-column width="20%">
                    <template class="header">
                        Funcionalidade
                    </template>
                    <template>
                        <vaadin-combo-box items="[[FeaturesData]]" item-value-path="id" item-label-path="value" value="{{item.feature}}">
                            <template>
                                <paper-icon-item>
                                    <paper-item-body two-line>
                                        <div>[[item.value]]</div>
                                    </paper-item-body>
                                </paper-icon-item>
                            </template>
                        </vaadin-combo-box>
                    </template>
                </vaadin-grid-column>
                <vaadin-grid-column width="12%">
                    <template class="header">
                        <center>
                            Inserção
                        </center>
                    </template>
                    <template>
                        <center>
                            <vaadin-checkbox checked="{{item.create}}"></vaadin-checkbox>
                        </center>
                    </template>
                </vaadin-grid-column>
                <vaadin-grid-column width="12%">
                    <template class="header">
                        <center>
                            Leitura
                        </center>
                    </template>
                    <template>
                        <center>
                            <vaadin-checkbox checked="{{item.read}}"></vaadin-checkbox>
                        </center>
                    </template>
                </vaadin-grid-column>
                <vaadin-grid-column width="12%">
                    <template class="header">
                        <center>
                            Modificação
                        </center>
                    </template>
                    <template>
                        <center>
                            <vaadin-checkbox checked="{{item.update}}"></vaadin-checkbox>
                        </center>
                    </template>
                </vaadin-grid-column>
                <vaadin-grid-column width="12%">
                    <template class="header">
                        <center>
                            Eliminação
                        </center>
                    </template>
                    <template>
                        <center>
                            <vaadin-checkbox checked="{{item.delete}}"></vaadin-checkbox>
                        </center>
                    </template>
                </vaadin-grid-column>
                <vaadin-grid-column width="12%">
                    <template class="header">
                        <center>
                            Ver Tudo
                        </center>
                    </template>
                    <template>
                        <center>
                            <vaadin-checkbox checked="{{item.verTudo}}"></vaadin-checkbox>
                        </center>
                    </template>
                </vaadin-grid-column>
                <template is="dom-if" if="{{ _permissions.update }}">
                    <vaadin-grid-column width="12%">
                        <template class="header">
                        </template>
                        <template>
                            <center>
                                @*<paper-button raised class="btnRemove" on-tap="_deleteUserAccess"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                                <paper-button raised class="btnRemove tableBtn" on-tap="_deleteUserAccess" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                            </center>
                        </template>
                    </vaadin-grid-column>
                </template>
            </vaadin-grid>
            <div class="row">
                <div class="col-lg-12">
                    <h2 class="separator">Acessos Dimensões</h2>
                </div>
            </div>
            <template is="dom-if" if="{{ _permissions.update }}">
                <div class="row">
                    <div class="col-lg-2">
                        <vaadin-combo-box items="[[DimensionData]]" id="_Dimension" name="_Dimension" item-value-path="id" item-label-path="value" label="Dimensão" value="{{ddDimension}}" on-value-changed="_onDimensionChanged">
                            <template>
                                <paper-icon-item>
                                    <paper-item-body two-line>
                                        <div>[[item.value]]</div>
                                    </paper-item-body>
                                </paper-icon-item>
                            </template>
                        </vaadin-combo-box>
                    </div>
                    <div class="col-lg-4">
                        <such-selectbox id="_DimensionValue" value="{{ddDimensionValue}}" label="Valor Dimensão"
                                        items="[[DimensionValueData]]"
                                        text-path="value"
                                        value-path="id"
                                        fields='[{"field":"id", "name":"Código"}, {"field":"value", "name":"Descrição"}]'>
                        </such-selectbox>
                        @*<vaadin-combo-box items="[[DimensionValueData]]" id="_DimensionValue" item-value-path="id" item-label-path="value" label="Valor Dimensão" value="{{ddDimensionValue}}">
                            <template>
                                <paper-icon-item>
                                    <paper-item-body two-line>
                                        <div>[[item.value]]</div>
                                    </paper-item-body>
                                </paper-icon-item>
                            </template>
                        </vaadin-combo-box>*@
                    </div>
                    <div class="col-lg-3 alignPoga">
                        <paper-button class="btnSave" raised on-tap="_createUserDimensionAccess"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                    </div>
                </div>
            </template>
            <br />
            <vaadin-grid id="gridAllowedUserDimensions" aria-label="gridAllowedUserDimensions" items="{{ data.allowedUserDimensions }}" class="grid" active-item="{{_SelectedLine}}">
                <vaadin-grid-column width="20%">
                    <template class="header">
                        Dimensão
                    </template>
                    <template>
                        <template is="dom-if" if="{{ item.selected }}">
                            <vaadin-combo-box items="[[DimensionData]]" item-value-path="id" item-label-path="value" value="{{item.dimension}}" on-value-changed="_onDimensionInGridChanged">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </template>
                        <template is="dom-if" if="{{ !item.selected }}">
                            [[ _formatDimension(item.dimension) ]]
                        </template>
                    </template>
                </vaadin-grid-column>

                <vaadin-grid-column width="20%">
                    <template class="header">
                        Valor Dimensão
                    </template>
                    <template>
                        {{item.dimensionValue}}
                        @*<template is="dom-if" if="{{ item.selected }}">
                            <vaadin-combo-box items="[[DimensionValueGridData]]" item-value-path="id" item-label-path="value" value="{{item.dimensionValue}}">
                                <template>
                                    <paper-icon-item>
                                        <paper-item-body two-line>
                                            <div>[[item.value]]</div>
                                        </paper-item-body>
                                    </paper-icon-item>
                                </template>
                            </vaadin-combo-box>
                        </template>
                        <template is="dom-if" if="{{ !item.selected }}">
                            [[ _formatDimensionValue(item.dimension, item.dimensionValue) ]]
                        </template>*@
                    </template>
                </vaadin-grid-column>

                <template is="dom-if" if="{{ _permissions.update }}">
                    <vaadin-grid-column width="60%">
                        <template class="header">
                        </template>
                        <template>
                            <center>
                                @*<paper-button raised class="btnRemove" on-tap="_onDeleteUserDimensionAccess"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                                <paper-button raised class="btnRemove tableBtn" on-tap="_onDeleteUserDimensionAccess" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                            </center>
                        </template>
                    </vaadin-grid-column>
                </template>
            </vaadin-grid>

            <div class="row">
                <div class="col-lg-12">
                    <h2 class="separator">Acessos Localizações</h2>
                </div>
            </div>
            <template is="dom-if" if="{{ _permissions.update }}">
                <div class="row">

                    <div class="col-sm-3">
                        <vaadin-combo-box items="[[CBLocations]]" id="_acessoLocalizacao" item-value-path="id" item-label-path="value" value="{{acessoLocalizacao}}" label="Cód. Localização" disabled="{{ !_permissions.update }}">
                            <template>
                                <table width="300px">
                                    <tr>
                                        <td width="15%">[[item.id]]</td>
                                        <td width="85%"> <b>[[item.value]]</b></td>
                                    </tr>
                                </table>
                            </template>
                        </vaadin-combo-box>
                    </div>

                    <div class="col-sm-3 alignPoga">
                        <paper-button class="btnSave" raised on-tap="_createUserAcessosLocalizacoes"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Criar</paper-button>
                    </div>
                </div>
            </template>
            <br />
            <vaadin-grid id="gridAllowedUserAcessosLocalizacoes" aria-label="gridAllowedUserAcessosLocalizacoes" items="{{ data.userAcessosLocalizacoes }}" class="editGrid" multi-sort="true">
                <vaadin-grid-column width="40%">
                    <template class="header">
                        Localização
                    </template>
                    <template>
                        <vaadin-combo-box items="[[CBLocations]]" id="tabAcessosLocalizacoes" name="tabAcessosLocalizacoes" item-value-path="id" item-label-path="value" value="{{item.localizacao}}" on-blur="_updateLinhaMaoDeObra" disabled="true">
                            <template>
                                <paper-icon-item>
                                    <paper-item-body two-line>
                                        <div>[[item.value]]</div>
                                    </paper-item-body>
                                </paper-icon-item>
                            </template>
                        </vaadin-combo-box>
                    </template>
                </vaadin-grid-column>
                <template is="dom-if" if="{{ _permissions.update }}">
                    <vaadin-grid-column width="60%">
                        <template class="header">
                        </template>
                        <template>
                            <center>
                                @*<paper-button raised class="btnRemove" on-tap="_onDeleteUserAcessosLocalizacao"><i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                                <paper-button raised class="btnRemove tableBtn" on-tap="_onDeleteUserAcessosLocalizacao" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                            </center>
                        </template>
                    </vaadin-grid-column>
                </template>
            </vaadin-grid>

        }
        <div class="marginSpace">
            @if (ViewBag.UserId == "0")
            {
                <template is="dom-if" if="{{ _permissions.create }}">
                    <paper-button class="btnSave" raised on-tap="_create"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Guardar</paper-button>
                </template>
            }
            else
            {
                <template is="dom-if" if="{{ _permissions.update }}">
                    <paper-button class="btnEdit" raised on-tap="_update"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp; Atualizar</paper-button>
                </template>
                <template is="dom-if" if="{{ _permissions.delete }}">
                    <center>
                        @*<paper-button class="btnRemove" raised on-tap="_delete"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp; Eliminar</paper-button>*@
                        <paper-button class="btnRemove tableBtn" raised on-tap="_delete" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></paper-button>
                    </center>
                </template>
            }
        </div>

        <paper-dialog id="dlgCopiarAcessos" style="width: 800px; height: 230px; padding: 10px; box-shadow: 4px 8px 14px 8px #888888;" modal>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Copiar Acessos de Utilizador</div>
                    <div class="panel-body">
                        <div class="row break_clear">
                            <div hidden>
                                <vaadin-text-field id="idUtilizadorDestino" value="{{data.idUser}}"></vaadin-text-field>
                            </div>
                            <div class="col-sm-6">
                                <vaadin-combo-box items="[[LListaUtilizadores]]" id="idUtilizadorOriginal" item-value-path="id" item-label-path="value" value="" label="Utilizador Original" disabled="{{ !_permissions.update }}" required error-message="Este campo é obrigatório">
                                    <template>
                                        <paper-icon-item>
                                            <paper-item-body two-line>
                                                <div>[[item.value]]</div>
                                            </paper-item-body>
                                        </paper-icon-item>
                                    </template>
                                </vaadin-combo-box>
                            </div>
                            <div class="col-sm-3 alignPoga">
                                <paper-button class="btnSave" on-tap="_CopiarAcessosUtilizador"><i class="fa fa-check" aria-hidden="true"></i>&nbsp; Copiar</paper-button>
                            </div>
                            <div class="col-sm-3 alignPoga">
                                <paper-button class="btnRemove" on-tap="_closeCopiarAcessosUtilizador"><i class="fa fa-close" aria-hidden="true"></i>&nbsp; Fechar</paper-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </paper-dialog>

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-details-config-users',
                properties: {
                    ddUserProfile: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    ddGrupoAprovacao: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    ddFeature: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    chkCreate: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkRead: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkUpdate: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkDelete: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                    chkVerTudo: {
                        type: Boolean,
                        notify: true,
                        value: false
                    },
                    ddDimension: {
                        type: Number,
                        notify: true,
                        value: ""
                    },
                    ddDimensionValue: {
                        type: Text,
                        notify: true,
                        value: ""
                    },
                    _SelectedLine: {
                        observer: '_lineSelectedHandler'
                    },
                    _permissions: {
	                    type: Array,
	                    value: @Html.Raw(Json.Serialize(ViewBag.UPermissions))
                    },
                    chkEnviarEmailAlerta: {
                        type: Boolean,
                        notify: true,
                        value: true
                    },
                },

                observers: [
                    '_onDimensionsCacheLoaded(DimensionData, DimensionValuesForRegion, DimensionValuesForArea, DimensionValuesForResponsability)'
                ],

                _onDimensionsCacheLoaded: function (optionsForDimension, optionsForRegion, optionsForArea, optionsForResponsability) {
                    if (!this.Flag) {
                        this.$.page_databound_ajax.body = JSON.stringify({ "IdUser": "@ViewBag.UserId" });
                        this.$.page_databound_ajax.generateRequest();
                    }
                    this.Flag = true;

                },
                ready: function () {
                    this._GetAllcodigoCentroResponsabilidade();
                },
                _showMessage: function (message) {
                    this.$.ToastMessageSuccess.text = message;
                    this.$.ToastMessageSuccess.open();
                },
                _showErrorMessage: function (message) {
                    this.$.ToastMessageError.text = message;
                    this.$.ToastMessageError.open();
                },
                _formatDimension: function (param) {
                    if (param != undefined) {
                        var sel = this.DimensionData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },
                _formatDimensionValue: function (dimension, dimensionValue) {
                    if (dimensionValue != undefined) {
                        var sel;
                        switch (dimension) {
                            case 1:
                                sel = this.DimensionValuesForRegion.find(x => x.id == dimensionValue);
                                break;
                            case 2:
                                sel = this.DimensionValuesForArea.find(x => x.id == dimensionValue);
                                break;
                            case 3:
                                sel = this.DimensionValuesForResponsability.find(x => x.id == dimensionValue);
                                break;
                        }
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },
                _lineSelectedHandler: function (item) {
                    if (item != null) {
                        var oSel = this.data.allowedUserDimensions.find(x => x.selected);
                        if (oSel != undefined) {
                            oSel.selected = false;
                        }

                        var sel = this.data.allowedUserDimensions.find(x => x == item);
                        if (sel != undefined) {
                            this.data.allowedUserDimensions.find(x => x == item).selected = true;

                            this.$.dimensionValueInGrid_ajax.body = JSON.stringify(item.dimension);
                            this.$.dimensionValueInGrid_ajax.generateRequest();

                            this.$.gridAllowedUserDimensions.clearCache();
                        }
                    }
                },

                //CRUD Functions
                _validateData() {
                    var Error = "";
                    if (this.data != null && this.data != "" &&
                        this.data.allowedUserDimensions != null && this.data.allowedUserDimensions != "")
                    {
                        var Dimensions = this.data.allowedUserDimensions;
                        for (var i = 0; i < Dimensions.length; i++) {
                            if (Dimensions[i].dimensionValue == "" || Dimensions[i].dimensionValue == null ||
                                Dimensions[i].dimension == "" || Dimensions[i].dimension == null) {
                                Error = "É obrigatório preencher as colunas Dimensão e Valor Dimensão";
                            }
                        }
                    }
                    if (this.data.idUser == '' || this.data.idUser == null) {
                        return "É obrigatório preencher o Id Utilizador";
                    } else if (this.data.name == '' || this.data.name == null) {
                        return "É obrigatório preencher o Nome";
                    }
                    else if (Error != "") {
                        return Error;
                    }

                    return "";
                },
                _create: function () {
                    var validate = this._validateData();
                    if (validate == "") {
                        this.$.ajax_create.url = "/Administracao/CreateUserConfig";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                    } else {
                        this._showErrorMessage(validate);
                    }
                },
                _update: function () {
                    var validate = this._validateData();
                    if (validate == "") {
                        this.$.ajax_create.url = "/Administracao/UpdateUserConfig";
                        this.$.ajax_create.body = JSON.stringify(this.data);
                        this.$.ajax_create.generateRequest();
                    } else {
                        this._showErrorMessage(validate);
                    }
                },
                _delete: function () {
                    this.$.ajax_create.url = "/Administracao/DeleteUserConfig";
                    this.$.ajax_create.body = JSON.stringify(this.data);
                    this.$.ajax_create.generateRequest();
                },
                _responseProcessor: function (e) {
                    if (e.detail.status === 200) {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            if (this.data.eReasonCode == 2) {
                                this._showErrorMessage(this.data.eMessage);
                            }
                            else
                                window.location.href = "/Administracao/ConfiguracaoUtilizadoresDetalhes/" + this.data.idUser;
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            if (this.data.id == 0) {
                                window.location.href = "/Administracao/PerfisModelo";
                            } else {
                                this._showErrorMessage("Ocorreu um erro ao remover o Perfil Modelo.");
                            }
                        }
                        else {
                            this.$.page_databound_ajax.generateRequest();
                            this._showMessage("O perfil foi atualizado com sucesso!");
                        }
                    } else {
                        if (e.detail.url.indexOf("Create") !== -1) {
                            if (this.data.eReasonCode == 2) {
                                this._showErrorMessage(this.data.eMessage);
                            }
                            else
                                this._showErrorMessage("Ocorreu um erro ao criar o perfil modelo.");
                        }
                        else if (e.detail.url.indexOf("Delete") !== -1) {
                            this._showErrorMessage("Ocorreu um erro ao remover o Perfil Modelo!");
                        }
                        else {
                            this.$.grid_databound.generateRequest();
                            this._showErrorMessage("Ocorreu um erro ao atualizar o perfil modelo.");
                        }
                    }
                },

                //User Profiles Functions
                _createUserProfile: function () {
                    if (this.ddUserProfile == "") {
                        this._showErrorMessage("É obrigatório escolher o perfil.");
                    } else {
                        this.$.page_createuserprofile_ajax.body = JSON.stringify({ userId: this.data.idUser, id: this.ddUserProfile });
                        this.$.page_createuserprofile_ajax.generateRequest();
                        this.$.gridUserProfiles.clearCache();
                    }

                },
                _deleteUserProfile: function (e) {
                    var index = this.data.userProfiles.indexOf(e.model.item);
                    this.data.userProfiles.splice(index, 1);
                    this.$.page_deleteuserprofile_ajax.body = JSON.stringify({ userId: this.data.idUser, id: e.model.item.id });
                    this.$.page_deleteuserprofile_ajax.generateRequest();
                    this.$.gridUserProfiles.clearCache();
                },

                //User Grupos Aprovação Functions
                _createUserGrupoAprovacao: function () {
                    if (this.ddGrupoAprovacao == null || this.ddGrupoAprovacao == "") {
                        this._showErrorMessage("É obrigatório escolher o Grupo Aprovação.");
                    } else {
                        this.$.page_createUserGrupoAprovacao_ajax.body = JSON.stringify({ approvalUser: this.data.idUser, approvalGroup: this.ddGrupoAprovacao, enviarEmailAlerta: this.chkEnviarEmailAlerta });
                        this.$.page_createUserGrupoAprovacao_ajax.generateRequest();
                        this.$.gridUserGruposAprovacao.clearCache();
                    }

                },
                _deleteUserGruposAprovacao: function (e) {
                    var index = this.data.userGruposAprovacao.indexOf(e.model.item);
                    this.data.userGruposAprovacao.splice(index, 1);

                    var ajax_request = this.$.page_deleteUserGruposAprovacao_ajax;
                    ajax_request.body = JSON.stringify({ approvalUser: this.data.idUser, approvalGroup: e.model.item.code });
                    var grid = this.$.gridUserGruposAprovacao;

                    bootbox.confirm({
                        message: "Tem a certeza que pretende remover o Utilizador do Grupo de Aprovação?",
                        buttons: {
                            confirm: {
                                label: 'Sim',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'Não',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (deleteUserGrupo) {
                            if (deleteUserGrupo) {
                                ajax_request.generateRequest();
                                grid.clearCache();
                            }
                        }
                    });
                },

                //User Accesses Functions
                _createUserAccess: function () {
                    if (this.ddFeature == null) {
                        this._showErrorMessage("É obrigatório preencher a Funcionalidade.");
                    } else {
                        this.$.page_createuseraccess_ajax.body = JSON.stringify({
                            idUser: this.data.idUser, feature: this.ddFeature,
                            read: this.chkRead, create: this.chkCreate, update: this.chkUpdate, delete: this.chkDelete, verTudo: this.chkVerTudo });
                        this.$.page_createuseraccess_ajax.generateRequest();
                        this.$.gridUserAccesses.clearCache();
                    }
                },
                _deleteUserAccess: function (e) {
                    var index = this.data.userAccesses.indexOf(e.model.item);
                    this.data.userAccesses.splice(index, 1);
                    this.$.page_deleteuseraccess_ajax.body = JSON.stringify({ idUser: this.data.idUser, area: e.model.item.area, feature: e.model.item.feature });
                    this.$.page_deleteuseraccess_ajax.generateRequest();
                    this.$.gridUserAccesses.clearCache();

                },
                //User Accesses Functions
                _onDimensionChanged: function (e) {
                    if (e.detail.value != null && e.detail.value != "") {
                        var dimensionId = e.detail.value;
                        this.$.dimensionValue_ajax.params = { "dimensionId": dimensionId };
                        this.$.dimensionValue_ajax.generateRequest();
                    }
                },
                _onDimensionInGridChanged: function (e) {

                    var oSel = this.data.allowedUserDimensions.find(x => x.selected);
                    if (oSel != undefined) {
                        oSel.dimension = e.detail.value;
                        oSel.dimensionValue = "";
                    }
                    this.$.gridAllowedUserDimensions.clearCache();
                    this.$.dimensionValueInGrid_ajax.body = JSON.stringify(e.detail.value);
                    this.$.dimensionValueInGrid_ajax.generateRequest();
                },
                _onDeleteUserDimensionAccess: function (e) {
                    var index = this.data.allowedUserDimensions.indexOf(e.model.item);
                    this.data.allowedUserDimensions.splice(index, 1);
                    this.$.page_deleteuserdimension_ajax.body = JSON.stringify({ userId: this.data.idUser, dimension: e.model.item.dimension, dimensionValue: e.model.item.dimensionValue });
                    this.$.page_deleteuserdimension_ajax.generateRequest();
                    this.$.gridAllowedUserDimensions.clearCache();
                },
                _onDeleteUserAcessosLocalizacao: function (e) {
                    var index = this.data.userAcessosLocalizacoes.indexOf(e.model.item);

                    var id_Utilizador = this.data.idUser;
                    var localizacao = e.model.item.localizacao;
                    var ajax_request = this.$.page_deleteuserAcessosLocalizacoes_ajax;

                    bootbox.confirm({
                        message: "Tem a certeza que pretende remover a Localização?",
                        buttons: {
                            confirm: {
                                label: 'Sim',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: 'Não',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (deleteAcessoLocalizacao) {
                            if (deleteAcessoLocalizacao) {
                                ajax_request.body = JSON.stringify({
                                    idUtilizador: id_Utilizador,
                                    localizacao: localizacao
                                });
                                ajax_request.generateRequest();
                                this.$.gridAllowedUserAcessosLocalizacoes.clearCache();
                            }
                        }
                    });
                },
                _createUserDimensionAccess: function () {
                    if (this.ddDimension == "" || this.ddDimension == null) {
                        this._showErrorMessage("É obrigatório preencher a dimensão.");
                    } else if (this.ddDimensionValue == null || this.ddDimensionValue == "") {
                        this._showErrorMessage("É obrigatório preencher o valor dimensão.");
                    } else {
                        this.$.page_createuserdimension_ajax.body = JSON.stringify({ userId: this.data.idUser, dimension: this.ddDimension, dimensionValue: this.ddDimensionValue });
                        this.$.page_createuserdimension_ajax.generateRequest();
                        this.$.gridAllowedUserDimensions.clearCache();
                    }
                },
                _deleteUserDimensionResponse: function (e) {
                    if (this.UserDimensionDeleted) {
                        this._showMessage('Eliminado com sucesso');
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao eliminar acesso a dimensão.');
                    }
                },
                _createUserAcessosLocalizacoes: function () {
                    if (this.acessoLocalizacao == "" || this.acessoLocalizacao == null) {
                        this._showErrorMessage("É obrigatório preencher a localização.");
                    } else {
                        this.$.page_createuserAcessosLocalizacoes_ajax.body = JSON.stringify({ IdUtilizador: this.data.idUser, Localizacao: this.acessoLocalizacao });
                        this.$.page_createuserAcessosLocalizacoes_ajax.generateRequest();
                        this.$.gridAllowedUserAcessosLocalizacoes.clearCache();
                    }
                },
                _deleteUserAcessosLocalizacoesResponse: function (e) {
                    var self = this;

                    setTimeout(function () {
                        bootbox.hideAll();
                    }, 0);

                    if (this.UserAcessosLocalizacoesDeleted) {
                        this._showMessage('Eliminado com sucesso');
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao eliminar acesso a localizacao.');
                    }
                    this.$.page_databound_ajax.generateRequest();
                },
                _createUserDimensionResponse: function (e) {
                    if (this.UserDimensionCreated) {
                        this._showMessage('Adicionado com sucesso');
                        this.$.page_databound_ajax.generateRequest();
                        this.ddDimension = ""
                        this.ddDimensionValue = "";
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao adicionar acesso a dimensão.');
                    }
                },
                _createUserAcessosLocalizacoesResponse: function (e) {
                    if (this.UserAcessosLocalizacoesCreated) {
                        this._showMessage('Adicionado com sucesso');
                        this.$.page_databound_ajax.generateRequest();
                        this.acessoLocalizacao = ""
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao adicionar acesso a dimensão.');
                    }
                },
                _deleteUserAccessResponse: function (e) {
                    if (this.UserAccessDeleted) {
                        this._showMessage('Eliminado com sucesso');
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao eliminar.');
                    }
                },
                _createUserAccessResponse: function (e) {
                    if (this.UserAccessCreated) {
                        this._showMessage('Adicionado com sucesso');
                        this.$.page_databound_ajax.generateRequest();
                        this.$._Areas.value = ""
                        this.$._Features.value = "";
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao adicionar.');
                    }
                },
                _deleteUserProfileResponse: function (e) {
                    if (this.UserProfileDeleted) {
                        this._showMessage('Eliminado com sucesso');
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao eliminar.');
                    }
                },
                _createUserProfileResponse: function (e) {
                    if (this.UserProfileCreated) {
                        this._showMessage('Adicionado com sucesso');
                        this.$.page_databound_ajax.generateRequest();
                        this.$._Profiles.value = ""
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao adicionar.');
                    }
                },

                _createUserGrupoAprovacaoResponse: function (e) {
                    if (this.UserGruposAprovacaoCreated) {
                        this._showMessage('Utilizador Associado com sucesso ao Grupo Aprovação.');

                        this.ddGrupoAprovacao = "";
                        this.chkEnviarEmailAlerta = true;

                        this.$.page_databound_ajax.generateRequest();
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao Associar.');
                    }
                },

                _deleteUserGruposAprovacaoResponse: function (e) {
                    if (this.UserGruposAprovacaoDeleted) {
                        this._showMessage('Utilizador eliminado com sucesso do Grupo Aprovação.');
                    }
                    else {
                        this._showErrorMessage('Ocorreu um erro ao eliminar.');
                    }
                },

                _redirectToNewUserConfigForm: function (item) {
                    if (item != null) {
                        window.location.href = "/Administracao/ConfiguracaoUtilizadoresDetalhes/0";
                    }
                },

                _openCopiarAcessosUtilizador: function (item) {
                    if (item != null) {
                        this.$.dlgCopiarAcessos.open();
                    }
                },

                _closeCopiarAcessosUtilizador: function () {
                    this.$.dlgCopiarAcessos.close();

                    this.$.page_databound_ajax.generateRequest();
                    this.$.gridUserAccesses.clearCache();
                },

                _CopiarAcessosUtilizador: function () {
                    if (this.$.idUtilizadorOriginal.value == "") {
                        this._showErrorMessage('Tem que escolher um Utilizador Original.');
                    }
                    else {
                        this.$.page_CopiarAcessosUtilizador_ajax.body = JSON.stringify({
                            createUser: this.$.idUtilizadorOriginal.value,
                            updateUser: this.$.idUtilizadorDestino.value
                        });
                        this.$.page_CopiarAcessosUtilizador_ajax.generateRequest();
                    }
                },

                _copiarAcessosUtilizadorResponse: function (e) {
                    this._showMessage(this.copiarAcessosUtilizador.eMessage);
                },

                _GetAllcodigoCentroResponsabilidade: function () {
                    this.$.page_GetAllResponsabilityCenterCodeFilterByAreaCode_ajax.body = JSON.stringify(this.$.codigoAreaFuncional.value);
                    this.$.page_GetAllResponsabilityCenterCodeFilterByAreaCode_ajax.generateRequest();
                }
            });
        });
    </script>

</dom-module>


