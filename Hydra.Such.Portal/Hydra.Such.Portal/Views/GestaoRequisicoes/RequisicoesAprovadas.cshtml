@{
    ViewData["Title"] = "Requisições a Validar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="import" href="~/lib/vaadin-themable-mixin/vaadin-themable-mixin.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sorter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-sort-behavior.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter.html" />
<link rel="import" href="~/lib/vaadin-grid/vaadin-grid-filter-behavior.html" />
<link rel="import" href="~/lib/paper-button/paper-button.html" />
<link rel="import" href="/lib/paper-toast-master/paper-toast.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-checkbox/vaadin-checkbox.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-text-field/vaadin-text-field.html">
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-date-picker/vaadin-date-picker.html" />
<link rel="import" href="~/lib/vaadin-valo-theme/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box.html" />
<link rel="import" href="/lib/vaadin-combo-box/vaadin-combo-box-behavior.html" />

<!--start ColumnToggle-->
<link rel="import" href="/lib/iron-menu-behavior/iron-menubar-behavior.html" />
<link rel="import" href="/lib/paper-tabs-master/paper-tabs.html" />
<link rel="import" href="/lib/iron-icons/iron-icons.html" />
<link rel="import" href="/lib/iron-behaviors/iron-button-state.html" />
<link rel="import" href="/lib/paper-menu-button/paper-menu-button.html" />
<!--end ColumnToggle-->

<x-requisitions></x-requisitions>
<dom-module id="x-requisitions">
    <template>
        <link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome-4.7.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/css/main.css" />

        <paper-toast id="ToastMessageSuccess" duration="4000" horizontalAlign="right" class="toastSuccess">&nbsp;<i class="fa fa-check fa-lg" aria-hidden="true"></i></paper-toast>
        <paper-toast id="ToastMessageError" duration="4000" horizontalAlign="right" class="toastError">&nbsp;<i class="fa fa-exclamation-triangle" aria-hidden="true"></i></paper-toast>

        <iron-ajax url="/GestaoRequisicoes/GetApprovedRequisitions" id="ajax_getgrid" last-response="{{result}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        
        <iron-ajax url="/GestaoRequisicoes/ExportToExcel_RequisicoesValidar"
                   last-response="{{export}}"
                   id="ajax_Export"
                   method="post"
                   handle-as="json"
                   on-response="_exportEXCELResponse"
                   content-type="application/json">
        </iron-ajax>

        <iron-ajax url="/PopulateDropdowns/GetRequestStatus" id="ajax_getstatus" auto last-response="{{resultstatus}}" method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetRegionCode" last-response="{{RegionData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetResponsabilityCenterCode" last-response="{{ResponsabilityCenterData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetFunctionalAreaCode" last-response="{{FunctionalAreaCodeData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>
        <iron-ajax url="/PopulateDropdowns/GetLocations" last-response="{{LocationsData}}" auto method="post" handle-as="json" content-type="application/json"></iron-ajax>


        <div class="subMenu">
            <paper-button class="tablinks" on-tap="_goBack" title="Voltar"><i class="fa fa-arrow-left" aria-hidden="true"></i> Voltar</paper-button>
            <paper-button id="btnExport" class="tablinks" on-tap="_exportEXCEL" title="Exportar para Excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i>&nbsp; Exportar</paper-button>

            <!--start ColumnToggle-->
            <paper-menu-button class="column-toggle" no-animations id="gridOpcaoGeral">
                <paper-icon-button icon="view-column" slot="dropdown-trigger" alt="Colunas"></paper-icon-button>
                <div class="list-group" slot="dropdown-content">
                    <template is="dom-repeat" items="[[ _toArray(_columns)]]" id="columnsList">
                        <a href="javascript:void(0);" on-tap="_toggleColumn" data-item$="[[item]]" class$="list-group-item [[ _getColumnItemClass( item.key ) ]]">
                            {{ item.value.label }}
                        </a>
                        <hr />
                    </template>
                </div>
            </paper-menu-button>
            <!--end ColumnToggle-->
        </div>

        <vaadin-grid column-reordering-allowed id="gridrequest" aria-label="ProfileModelsTabel" items="[[result]]" class="grid" active-item="{{_SelectedLine}}">
            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisitionNo">Nº Requisição </vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisitionNo" value="[[filter.requisitionNo]]" />
                </template>
                <template>
                    {{item.requisitionNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.state.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="state">Estado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="state" value="[[filter.state]]" />
                </template>
                <template>
                    [[ _parsestate(item.state)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.urgent.hidden }}">
                <template class="header">
                    Urgente
                </template>
                <template>
                    <vaadin-checkbox checked="{{item.urgent}}" disabled></vaadin-checkbox>
                </template>
            </vaadin-grid-column>

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.buyCash.hidden }}">
            <template class="header">
                Compra a Dinheiro
            </template>
            <template>
                <vaadin-checkbox checked="{{item.buyCash}}" disabled></vaadin-checkbox>
            </template>
        </vaadin-grid-column>*@

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.alreadyPerformed.hidden }}">
                <template class="header">
                    Trabalho já executado
                </template>
                <template>
                    <vaadin-checkbox checked="{{item.alreadyPerformed}}" disabled></vaadin-checkbox>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requestNutrition.hidden }}">
                <template class="header">
                    Requisição Nutrição
                </template>
                <template>
                    <vaadin-checkbox checked="{{item.requestNutrition}}" disabled></vaadin-checkbox>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.pedirOrcamento.hidden }}">
                <template class="header">
                    Pedir Orçamento
                </template>
                <template>
                    <vaadin-checkbox checked="{{item.pedirOrcamento}}" disabled></vaadin-checkbox>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.attachment.hidden }}">
                <template class="header">
                    Anexo(s)
                </template>
                <template>
                    <vaadin-checkbox checked="{{item.attachment}}" disabled></vaadin-checkbox>
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.projectNo.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="projectNo">Nº Projeto</vaadin-grid-sorter>
                    <vaadin-grid-filter path="projectNo" value="[[filter.projectNo]]" />
                </template>
                <template>
                    {{item.projectNo}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.clientCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="clientCode">Cliente Nº</vaadin-grid-sorter>
                    <vaadin-grid-filter path="clientCode" value="[[filter.clientCode]]" />
                </template>
                <template>
                    {{item.clientCode}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.clientName.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="clientName">Cliente Nome</vaadin-grid-sorter>
                    <vaadin-grid-filter path="clientName" value="[[filter.clientName]]" />
                </template>
                <template>
                    {{item.clientName}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.regionCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="regionCode">Código Região</vaadin-grid-sorter>
                    <vaadin-grid-filter path="regionCode" value="[[filter.regionCode]]" />
                </template>
                <template>
                    @*[[ _parseregion(item.regionCode)]]*@
                    {{item.regionCode}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.functionalAreaCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="functionalAreaCode">Código Área Funcional</vaadin-grid-sorter>
                    <vaadin-grid-filter path="functionalAreaCode" value="[[filter.functionalAreaCode]]" />
                </template>
                <template>
                    @*[[ _parseArea(item.functionalAreaCode)]]*@
                    {{item.functionalAreaCode}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.centerResponsibilityCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="centerResponsibilityCode">Código Centro Responsabilidade</vaadin-grid-sorter>
                    <vaadin-grid-filter path="centerResponsibilityCode" value="[[filter.centerResponsibilityCode]]" />
                </template>
                <template>
                    {{item.centerResponsibilityCode}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localCode.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="localCode">Código Localização</vaadin-grid-sorter>
                    <vaadin-grid-filter path="localCode" value="[[filter.localCode]]" />
                </template>
                <template>
                    {{item.localCode}}
                </template>
            </vaadin-grid-column>

            @*<vaadin-grid-column width="160px" resizable hidden$="{{ _columns.localCode.hidden }}">
            <template class="header">
                <vaadin-grid-sorter path="localCode">Código Localização</vaadin-grid-sorter>
                <vaadin-grid-filter path="localCode" value="[[filter.localCode]]" />
            </template>
            <template>
                {{item.localCode}}
            </template>
        </vaadin-grid-column>*@

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.comments.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="comments">Observações</vaadin-grid-sorter>
                    <vaadin-grid-filter path="comments" value="[[filter.comments]]" />
                </template>
                <template>
                    {{item.comments}}
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.requisitionDate.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="requisitionDate">Data requisição</vaadin-grid-sorter>
                    <vaadin-grid-filter path="requisitionDate" value="[[filter.requisitionDate]]" />
                </template>
                <template>
                    [[ _parseDateFormat(item.requisitionDate)]]
                </template>
            </vaadin-grid-column>

            <vaadin-grid-column width="160px" resizable hidden$="{{ _columns.estimatedValue.hidden }}">
                <template class="header">
                    <vaadin-grid-sorter path="estimatedValue">Valor Estimado</vaadin-grid-sorter>
                    <vaadin-grid-filter path="estimatedValue" value="[[filter.estimatedValue]]" />
                </template>
                <template>
                    {{item.estimatedValue}}
                </template>
            </vaadin-grid-column>
        </vaadin-grid>
    </template>
    <script>
        document.addEventListener('WebComponentsReady', function () {
            Polymer({
                is: 'x-requisitions',
                properties: {
                    _SelectedLine: {
                        observer: '_rowSelected'
                    },
                    _filterActive: {
                        type: Boolean,
                        value: true
                    },
                    _columns: {
                        type: Object,
                        value: function () {
                            return {};
                        }
                    },
                    /*FILTROS*/
                    filter: {
                        type: Object,
                        value: {},
                    },
                },
                observers: [
                    '_onCacheLoaded(resultstatus,RegionData,FunctionalAreaCodeData,ResponsabilityCenterData,LocationsData)'
                ],
                _onCacheLoaded: function (resultstatus, RegionData, FunctionalAreaCodeData, ResponsabilityCenterData, LocationsData) {
                    if (!this.Flag) {
                        this.$.ajax_getgrid.generateRequest();
                    }
                    this.Flag = true;

                    /*FILTROS*/
                    window.handleGridListColumnsOrder(this.$.gridrequest, 'gestaorequisicoes-requisicoesaprovadas');
                    window.grid = this.$.gridrequest;
                    window._this = this;

                    /*ColumnToggle*/
                    this._startColumnToggle();

                    var _this = this;
                    $(window).resize(function () {
                        _this.fixGridToBottom();
                    });
                    $(window).trigger('resize');
                },
                fixGridToBottom: function () {
                    var grid_el = $(this.$.gridrequest);
                    var parentHeight = $(this).offsetParent().height();
                    var offsetTop = $(this).offset().top;
                    var height = parentHeight - offsetTop;
                    grid_el.height(height);
                },
                _parsestate: function (param1) {
                    if (param1 != undefined) {
                        if (this.resultstatus != null) {
                            var array = this.resultstatus;
                            if (param1 != undefined) {
                                return array.find(x => x.id == param1).value;
                            }
                        }
                    }
                    return "";

                },
                _rowSelected: function (item) {
                    if (item != null) {
                        /*FILTROS*/
                        var filters = {};
                        this.$.gridrequest._filters.map(function (value, index) {
                            filters[value.path] = value.value;
                        });
                        window.setGridFilter('gestaorequisicoes-requisicoesaprovadas', filters || {});

                        var requisitionNo = "";
                        var state = "";
                        var projectNo = "";
                        var clientCode = "";
                        var clientName = "";
                        var regionCode = "";
                        var functionalAreaCode = "";
                        var centerResponsibilityCode = "";
                        var localCode = "";
                        var comments = "";
                        var requisitionDate = "";
                        var estimatedValue = "";

                        if (filters != null && filters.requisitionNo != undefined && filters.requisitionNo != "") requisitionNo = filters.requisitionNo;
                        if (filters != null && filters.state != undefined && filters.state != "") state = filters.state;
                        if (filters != null && filters.projectNo != undefined && filters.projectNo != "") projectNo = filters.projectNo;
                        if (filters != null && filters.clientCode != undefined && filters.clientCode != "") clientCode = filters.clientCode;
                        if (filters != null && filters.clientName != undefined && filters.clientName != "") clientName = filters.clientName;
                        if (filters != null && filters.regionCode != undefined && filters.regionCode != "") regionCode = filters.regionCode;
                        if (filters != null && filters.functionalAreaCode != undefined && filters.functionalAreaCode != "") functionalAreaCode = filters.functionalAreaCode;
                        if (filters != null && filters.centerResponsibilityCode != undefined && filters.centerResponsibilityCode != "") centerResponsibilityCode = filters.centerResponsibilityCode;
                        if (filters != null && filters.localCode != undefined && filters.localCode != "") localCode = filters.localCode;
                        if (filters != null && filters.comments != undefined && filters.comments != "") comments = filters.comments;
                        if (filters != null && filters.requisitionDate != undefined && filters.requisitionDate != "") requisitionDate = filters.requisitionDate;
                        if (filters != null && filters.estimatedValue != undefined && filters.estimatedValue != "") estimatedValue = filters.estimatedValue;

                        var listafiltro = this.$.gridrequest._filter(this.result);
                        item.lista = listafiltro;
                        window.location.href = "/GestaoRequisicoes/DetalhesReqAprovada/?id=" + item.requisitionNo +
                            "&requisitionNo=" + requisitionNo +
                            "&state=" + state +
                            "&projectNo=" + projectNo +
                            "&clientCode=" + clientCode +
                            "&clientName=" + clientName +
                            "&regionCode=" + regionCode +
                            "&functionalAreaCode=" + functionalAreaCode +
                            "&centerResponsibilityCode=" + centerResponsibilityCode +
                            "&localCode=" + localCode +
                            "&comments=" + comments +
                            "&requisitionDate=" + requisitionDate +
                            "&estimatedValue=" + estimatedValue;
                    }
                },
                /*FILTROS*/
                created: function () {
                    this.filter = window.getGridFilter('gestaorequisicoes-requisicoesaprovadas');
                },

                _parseregion: function (param) {
                    if (param != undefined && this.RegionData != undefined) {
                        var sel = this.RegionData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";

                },
                _parseArea: function (param) {
                    if (param != undefined && this.FunctionalAreaCodeData != undefined) {
                        var sel = this.FunctionalAreaCodeData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";

                },
                _parseDateFormat: function (date) {
                    if (date != null && date != "") {
                        var Date = date.split("T");
                        if (Date != "" && Date != undefined) {
                            var x = Date[0].split("-");
                            return x[2] + "-" + x[1] + "-" + x[0];
                        }
                    }
                },
                _parsecenterRespons: function (param) {
                    if (param != undefined && this.ResponsabilityCenterData != undefined) {
                        var sel = this.ResponsabilityCenterData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";
                },
                _parseLocations: function (param) {
                    if (param != undefined && this.LocationsData != undefined) {
                        var sel = this.LocationsData.find(x => x.id == param);
                        if (sel != undefined) {
                            return sel.value;
                        }
                    }
                    return "";

                },

                _exportEXCEL: function () {
                    var result = this.$.gridrequest._filter(this.result);
                    if (result != null && result.length > 0) {
                        result[0].ColunasEXCEL = this._columns;

                        this.$.ajax_Export.body = JSON.stringify(result);
                        this.$.ajax_Export.generateRequest();
                    }
                },

                _exportEXCELResponse: function (e) {
                    var FileName = this.export;
                    location.href = '../GestaoRequisicoes/ExportToExcelDownload_RequisicoesValidar?sFileName=' + FileName;
                },

                /*start - ColumnToggle*/
                _startColumnToggle: function () {
                    var columns = {
                        "requisitionNo": { hidden: false, label: "Nº Requisição" },
                        "state": { hidden: false, label: "Estado" },
                        "urgent": { hidden: false, label: "Urgente" },
                        "alreadyPerformed": { hidden: false, label: "Trabalho já executado" },
                        "requestNutrition": { hidden: false, label: "Requisição Nutrição" },
                        "pedirOrcamento": { hidden: false, label: "Pedir Orçamento" },
                        "attachment": { hidden: false, label: "Anexo(s)" },
                        "projectNo": { hidden: false, label: "Nº Projeto" },
                        "clientCode": { hidden: false, label: "Cliente Nº" },
                        "clientName": { hidden: false, label: "Cliente Nome" },
                        "regionCode": { hidden: false, label: "Código Região" },
                        "functionalAreaCode": { hidden: false, label: "Código Área Funcional" },
                        "centerResponsibilityCode": { hidden: false, label: "Código Centro Responsabilidade" },
                        "localCode": { hidden: false, label: "Código Localização" },
                        "comments": { hidden: false, label: "Observações" },
                        "requisitionDate": { hidden: false, label: "Data requisição" },
                        "estimatedValue": { hidden: false, label: "Valor Estimado" }
                        //"buyCash": { hidden: false, label: "Compra a Dinheiro" },
                    };

                    if (localStorage["requisitions.ToggleColumn"]) {
                        var keys = Object.keys(columns);
                        var storedColumns = JSON.parse(localStorage["requisitions.ToggleColumn"]);
                        for (var i = 0; i < keys.length; i++) {
                            columns[keys[i]] = storedColumns[keys[i]];
                        }
                    };
                    this._columns = columns;
                },
                _toggleColumn: function (event) {
                    var columnIndex = JSON.parse(event.target.dataset.item).key;
                    event.path[0].classList.toggle("selected");
                    this.set('_columns.' + columnIndex + '.hidden', (!this._columns[columnIndex].hidden));
                    if (typeof (Storage) !== "undefined") {
                        localStorage["requisitions.ToggleColumn"] = JSON.stringify(this._columns);
                    }
                },
                _getColumnItemClass: function (columnIndex) {
                    return !this._columns[columnIndex].hidden ? "selected" : "";
                },

                _toArray: function (obj) {
                    return Object.keys(obj).map(function (key) {
                        return {
                            key: key,
                            value: obj[key]
                        };
                    });
                },
                /* end - ColumnToggle */

                _goBack: function (e) {
                    window.history.back();
                },

            });
        });
    </script>
</dom-module>